(()=>{"use strict";var e={771:(e,t,n)=>{var r=n(294),a=n(935),o=n(379),s=n.n(o),i=n(745);s()(i.Z,{insert:"head",singleton:!1}),i.Z.locals;var l=n(830),f=n.n(l);function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(e,t){return(m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function p(e,t){return!t||"object"!==u(t)&&"function"!=typeof t?d(e):t}function d(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function A(e){return(A=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var g=f().Utilities.generateSeed(),C=f().Utilities.generateColor(g);console.log("start",g);var h=new(f().Flag)({id:"flag__canvas-container",aspectRatio:"3:5",divisionCount:2,color:C.color,seed:g}),b={seed:+h.seed,flag:h,ratio:"3:5"};const y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&m(e,t)}(l,e);var t,n,a,o,s,i=(o=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=A(o);if(s){var n=A(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function l(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),(t=i.call(this,e)).state=b,t.toggleAttributes=t.toggleAttributes.bind(d(t)),t}return t=l,a=[{key:"getDerivedStateFromProps",value:function(e,t){return e.seed!==t.seed||e.ratio!==t.ratio&&""!==e.ratio?{seed:e.seed,flag:new(f().Flag)({id:"flag__canvas-container",aspectRatio:e.ratio,divisionCount:2,seed:e.seed})}:null}}],(n=[{key:"getDivisionInfo",value:function(e){var t=this;return Object.keys(this.state.flag.divisions[e]).map((function(n,a){if("object"===u(t.state.flag.divisions[e][n])){var o=(s=n,Object.keys(t.state.flag.divisions[e][s]).map((function(n,a){return r.createElement("li",{key:a+"_"+n},"".concat(n,": ").concat(t.state.flag.divisions[e][s][n]))})));return r.createElement("li",{key:a+"_"+n},n,":",r.createElement("ul",null,o))}if("seed"!==n&&"seedMultiplier"!==n)return r.createElement("li",{key:a+"_"+n},"".concat(n,": ").concat(t.state.flag.divisions[e][n]));var s}))}},{key:"toggleAttributes",value:function(){var e;e=!0!==this.state.attributesVisible,this.setState({attributesVisible:e})}},{key:"componentDidMount",value:function(){this.state.flag.drawFlag()}},{key:"componentDidUpdate",value:function(e,t){this.state.flag.destroyFlag(e.seed),this.state.flag.drawFlag()}},{key:"render",value:function(){var e=this,t=this,n=this.state.flag.divisions.map((function(n,a){return r.createElement("li",{key:a+"_"+n},e.state.flag.divisions[a].constructor.name,r.createElement("ul",null,t.getDivisionInfo(a)))}));return r.createElement("div",{className:"flag"},r.createElement("div",{className:"flag__seed"},"Seed string ",r.createElement("strong",null,'"',this.props.seedString,'"')," generated seed: ",r.createElement("strong",null,this.state.seed)),r.createElement("div",{id:"flag__canvas-container",className:"flag__canvas-container"}),r.createElement("button",{className:"flag__attributes-toggle",onClick:this.toggleAttributes},this.state.attributesVisible?"Hide":"View"," Flag Attributes"),this.state.attributesVisible&&r.createElement("div",{className:"flag__attributes"},r.createElement("ul",{className:"flag__attributes-list"},r.createElement("li",{className:"flag__attributes-list-item"},r.createElement("strong",null,"Base Color"),": ",this.state.flag.color.color),r.createElement("li",{className:"flag__attributes-list-item"},r.createElement("strong",null,"Seed string"),": ",this.props.seedString||"none"),r.createElement("li",{className:"flag__attributes-list-item"},r.createElement("strong",null,"Generated seed"),": ",this.state.seed),r.createElement("li",{className:"flag__attributes-list-item"},r.createElement("strong",null,"Aspect ratio"),": ",this.state.flag.aspect.h,":",this.state.flag.aspect.w),r.createElement("li",{className:"flag__attributes-list-item"},r.createElement("strong",null,"Dimensions"),": ",this.state.flag.dimensions.h,"x",this.state.flag.dimensions.w),r.createElement("li",{className:"flag__attributes-list-item"},r.createElement("strong",null,"# of Divisions"),": ",this.state.flag.divisionCount,r.createElement("ul",null,n)))))}}])&&c(t.prototype,n),a&&c(t,a),l}(r.Component);function B(e){return(B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function x(e,t){return(x=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function v(e,t){return!t||"object"!==B(t)&&"function"!=typeof t?_(e):t}function _(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function k(e){return(k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}const S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&x(e,t)}(i,e);var t,n,a,o,s=(a=i,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(a);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return v(this,e)});function i(e){var t;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),t=s.call(this,e);var n=f().Utilities.generateSeed();return t.state={seedString:"",lastSeedString:"",seed:n,lastSeed:n,ratio:"3:5"},t.handleChange=t.handleChange.bind(_(t)),t.handleSubmit=t.handleSubmit.bind(_(t)),t.generateRandom=t.generateRandom.bind(_(t)),t}return t=i,(n=[{key:"handleSubmit",value:function(e){e.preventDefault(),console.log("event",e.target.elements),this.setState({seedString:e.target.elements["form-seedstring"].value,seed:e.target.elements["form-seed"].value,ratio:e.target.elements["form-ratio"].value,lastSeed:this.state.lastSeed,lastSeedString:this.state.lastSeedString})}},{key:"handleChange",value:function(e){console.log("event",e),"form-seed"===e.target.id&&this.setState({lastSeed:this.state.seed,seed:+e.target.value}),"form-seedstring"===e.target.id&&this.setState({lastSeed:this.state.seed,seedString:e.target.value,seed:f().Utilities.generateSeed(e.target.value)}),"form-ratio"===e.target.id&&this.setState({ratio:e.target.value})}},{key:"generateRandom",value:function(e){e.preventDefault();var t=f().Utilities.generateSeed();console.log("new seed",t),this.setState({lastSeed:this.state.seed,lastSeedString:this.state.seedString,seed:t,seedString:""})}},{key:"render",value:function(){return r.createElement("div",{className:"flag-form"},r.createElement("div",{className:"author"},r.createElement("h1",null,r.createElement("a",{href:"https://github.com/carwin",title:"Carwin's GitHub page"},"@carwin"),"'s Flag Generator")),r.createElement("form",{className:"flag-form__form",onSubmit:this.handleSubmit},r.createElement("div",{className:"flag-form__random-container"},r.createElement("button",{id:"randomFlag",className:"flag-form__random",onClick:this.generateRandom},"Random Flag")),r.createElement("label",null,"seed string",r.createElement("input",{id:"form-seedstring",placeholder:"something memorable",type:"text",onChange:this.handleChange,value:this.state.seedString})),r.createElement("label",null,"seed",r.createElement("input",{id:"form-seed",type:"number",onChange:this.handleChange,value:"number"==typeof this.state.seed?this.state.seed:.1})),r.createElement("label",null,"ratio",r.createElement("input",{id:"form-ratio",type:"text",placeholder:"3:5",onChange:this.handleChange,value:this.state.ratio}))),r.createElement("div",{className:"flag-form__flag-container"},r.createElement(y,{seedString:this.state.seedString,seed:this.state.seed,ratio:/^[0-9]:[0-9]/.test(this.state.ratio)?this.state.ratio:"3:5"})))}}])&&w(t.prototype,n),i}(r.Component);function E(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function j(){var e,t,n=(e=(0,r.useState)("ClickMe"),t=2,function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,o=void 0;try{for(var s,i=e[Symbol.iterator]();!(r=(s=i.next()).done)&&(n.push(s.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==i.return||i.return()}finally{if(a)throw o}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return E(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?E(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return n[0],n[1],r.createElement(S,null)}(0,a.render)(r.createElement(j,null),document.getElementById("root"))},745:(e,t,n)=>{n.d(t,{Z:()=>K});var r=n(15),a=n.n(r),o=n(645),s=n.n(o),i=n(667),l=n.n(i),f=n(563),u=n(94),c=n(426),m=n(788),p=n(378),d=n(586),A=n(831),g=n(690),C=n(466),h=n(511),b=n(132),y=n(960),B=n(896),w=n(216),x=n(6),v=n(641),_=s()(a()),k=l()(f.Z),S=l()(f.Z,{hash:"?#iefix"}),E=l()(u.Z),j=l()(c.Z),M=l()(m.Z),O=l()(p.Z),G=l()(p.Z,{hash:"?#iefix"}),D=l()(d.Z),Z=l()(A.Z),R=l()(g.Z),P=l()(C.Z),Q=l()(C.Z,{hash:"?#iefix"}),I=l()(h.Z),U=l()(b.Z),z=l()(y.Z),N=l()(B.Z),F=l()(B.Z,{hash:"?#iefix"}),$=l()(w.Z),q=l()(x.Z),V=l()(v.Z);_.push([e.id,"@font-face{font-family:'M+ 1p';src:url("+k+");src:url("+S+') format("embedded-opentype"),url('+E+') format("woff2"),url('+j+') format("woff"),url('+M+") format(\"truetype\");font-weight:normal;font-style:normal;font-display:swap}@font-face{font-family:'M+ 1p';src:url("+O+");src:url("+G+') format("embedded-opentype"),url('+D+') format("woff2"),url('+Z+') format("woff"),url('+R+") format(\"truetype\");font-weight:300;font-style:normal;font-display:swap}@font-face{font-family:'M+ 1p';src:url("+P+");src:url("+Q+') format("embedded-opentype"),url('+I+') format("woff2"),url('+U+') format("woff"),url('+z+") format(\"truetype\");font-weight:900;font-style:normal;font-display:swap}@font-face{font-family:'M+ 1p';src:url("+N+");src:url("+F+') format("embedded-opentype"),url('+$+') format("woff2"),url('+q+') format("woff"),url('+V+') format("truetype");font-weight:900;font-style:normal;font-display:swap}body{background:#e7dada;color:#3d393a}h1{font-family:"M+ 1p";font-weight:300;font-size:3rem}h1 a{text-decoration:none;color:#e73f3f}h1 a:hover{border-bottom:2px solid #e78c8c}button{padding:9px 12px;-webkit-appearance:none;-moz-appearance:none;appearance:none;font-family:"M+ 1p";text-transform:uppercase;font-weight:900;font-size:35px;color:#ffb2b2;border-radius:6px;background:#3d393a;text-shadow:0 1px 1px #7f7f7f;border:0;outline:0;margin-bottom:1rem}button:hover{color:#e78c8c;text-shadow:0 1px 1px #191919;cursor:pointer}label{font-family:"M+ 1p";font-weight:300;font-size:1.3rem}input[type="text"],input[type="number"]{font-family:"M+ 1p";font-size:1.25rem;text-align:center;display:block;height:30px;line-height:1.5;padding:8px 10px;width:300px;margin:0 auto 1.5rem;background:none;border:0;outline:0;border-bottom:2px solid #e78c8c;color:#3d3a39}input[type="text"]:focus,input[type="number"]:focus{border-bottom:2px solid #ff2222}input[type="text"]:-internal-autofill-selected,input[type="number"]:-internal-autofill-selected{background:transparent}.flag-form{max-width:800px;margin:0 auto;text-align:center}@media screen and (min-width: 650px){.flag-form{display:-webkit-box;display:-ms-flexbox;display:flex;flex-wrap:wrap;align-items:center;justify-content:space-around}}@media screen and (min-width: 1024px){.flag-form{max-width:1024px;align-items:start}}@media screen and (min-width: 650px){.flag-form__random-container{order:1;flex:auto}}@media screen and (min-width: 1024px){.flag-form__random-container{order:2}}.flag-form__form{margin-bottom:2.3rem}@media screen and (min-width: 650px){.flag-form__form{order:2;flex:auto}}@media screen and (min-width: 1024px){.flag-form__form{order:3}}@media screen and (min-width: 650px){.flag-form__flag-container{order:3;flex:auto}}@media screen and (min-width: 1024px){.flag-form__flag-container{max-width:600px;order:1}}.flag__canvas-container{margin-bottom:2.3rem}.flag__canvas-container canvas{max-width:100%}.flag__seed{font-family:"M+ 1p";font-size:0.8rem;color:#92586e}.flag__attributes{font-family:"M+ 1p";display:block;max-width:590;margin:0 auto}.flag__attributes-list{text-align:left}.flag__attributes-toggle{text-transform:lowercase;font-size:1.3rem;text-shadow:none}@media screen and (min-width: 650px){.author{flex:1 1 100%}}\n',"",{version:3,sources:["webpack://./src/scss/_fonts.scss","webpack://./src/scss/main.scss"],names:[],mappings:"AAwBA,WACI,mBAAoB,CACpB,2CAA0C,CAC1C,iPAG4D,CAC5D,kBAAmB,CACnB,iBAAkB,CAClB,iBAAkB,CAGtB,WACI,mBAAoB,CACpB,2CAAwC,CACxC,iPAG0D,CAC1D,eAAgB,CAChB,iBAAkB,CAClB,iBAAkB,CAGtB,WACI,mBAAoB,CACpB,4CAAwC,CACxC,qPAG0D,CAC1D,eAAgB,CAChB,iBAAkB,CAClB,iBAAkB,CAetB,WACI,mBAAoB,CACpB,4CAAwC,CACxC,qPAG0D,CAC1D,eAAgB,CAChB,iBAAkB,CAClB,iBAAkB,CCxDtB,KACI,kBAAmB,CACnB,aAAc,CACjB,GAGG,mBA5BU,CA6BV,eAAgB,CAChB,cAAe,CAHnB,KAMQ,oBAAqB,CACrB,aAAc,CAPtB,WAUY,+BAAgC,CACnC,OAOL,gBAAiB,CACjB,uBAAgB,CAAhB,oBAAgB,CAAhB,eAAgB,CAChB,mBA/CU,CAgDV,wBAAyB,CACzB,eAAgB,CAChB,cAAe,CACf,aAAc,CACd,iBAAkB,CAClB,kBAAmB,CACnB,6BAA8B,CAC9B,QAAS,CACT,SAAU,CACV,kBAAmB,CAbvB,aAgBM,aAAc,CACd,6BAA8B,CAC9B,cAAe,CAChB,MAKD,mBApEU,CAqEV,eAAgB,CAChB,gBAAiB,CACpB,wCAIG,mBA3EU,CA4EV,iBAAkB,CAClB,iBAAkB,CAClB,aAAc,CACd,WAAY,CACZ,eAAgB,CAChB,gBAAiB,CACjB,WAAY,CACZ,oBAAqB,CAIrB,eAAgB,CAChB,QAAS,CACT,SAAU,CACV,+BAAgC,CAChC,aAAc,CAlBlB,oDAqBQ,+BAAgC,CArBxC,gGAyBQ,sBAAuB,CAC1B,WAMD,eAAgB,CAChB,aAAc,CACd,iBAAkB,CA/FlB,qCA4FJ,WAKQ,mBAAa,CAAb,mBAAa,CAAb,YAAa,CACb,cAAe,CACf,kBAAmB,CACnB,4BAA6B,CAMpC,CA1GG,sCA4FJ,WAWQ,gBAAiB,CACjB,iBAAkB,CAEzB,CA1GG,qCA4GJ,6BAEQ,OAAQ,CACR,SAAU,CAKjB,CApHG,sCA4GJ,6BAMQ,OAAQ,CAEf,CAED,iBACI,oBAAqB,CAvHrB,qCAsHJ,iBAGQ,OAAQ,CACR,SAAU,CAKjB,CA/HG,sCAsHJ,iBAOQ,OAAQ,CAEf,CA/HG,qCAiIJ,2BAEQ,OAAQ,CACR,SAAU,CAMjB,CA1IG,sCAiIJ,2BAMQ,eAAgB,CAChB,OAAQ,CAEf,CAGD,wBACI,oBAAqB,CADzB,+BAIQ,cAAe,CAClB,YAKD,mBAnKU,CAoKV,gBAAiB,CACjB,aAAc,CACjB,kBAGG,mBAzKU,CA0KV,aAAc,CACd,aAAc,CACd,aAAc,CACjB,uBAGG,eAAgB,CACnB,yBAGG,wBAAyB,CACzB,gBAAiB,CACjB,gBAAiB,CA1KjB,qCA8KJ,QAEQ,aAAc,CAErB",sourcesContent:["// @font-face {\n//   font-family: 'M+ 1p';\n//   src: url('../assets/mplus-1p-thin.eot');\n//   src: url('../assets/mplus-1p-thin.eot?#iefix') format('embedded-opentype'),\n//     url('../assets/mplus-1p-thin.woff2') format('woff2'),\n//     url('../assets/mplus-1p-thin.woff') format('woff'),\n//     url('../assets/mplus-1p-thin.ttf') format('truetype');\n//   font-weight: 100;\n//   font-style: normal;\n//   font-display: swap;\n// }\n\n// @font-face {\n//     font-family: 'M+ 1p';\n//     src: url('../assets/mplus-1p-medium.eot');\n//     src: url('../assets/mplus-1p-medium.eot?#iefix') format('embedded-opentype'),\n//         url('../assets/mplus-1p-medium.woff2') format('woff2'),\n//         url('../assets/mplus-1p-medium.woff') format('woff'),\n//         url('../assets/mplus-1p-medium.ttf') format('truetype');\n//     font-weight: 500;\n//     font-style: normal;\n//     font-display: swap;\n// }\n\n@font-face {\n    font-family: 'M+ 1p';\n    src: url('../assets/mplus-1p-regular.eot');\n    src: url('../assets/mplus-1p-regular.eot?#iefix') format('embedded-opentype'),\n        url('../assets/mplus-1p-regular.woff2') format('woff2'),\n        url('../assets/mplus-1p-regular.woff') format('woff'),\n        url('../assets/mplus-1p-regular.ttf') format('truetype');\n    font-weight: normal;\n    font-style: normal;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'M+ 1p';\n    src: url('../assets/mplus-1p-light.eot');\n    src: url('../assets/mplus-1p-light.eot?#iefix') format('embedded-opentype'),\n        url('../assets/mplus-1p-light.woff2') format('woff2'),\n        url('../assets/mplus-1p-light.woff') format('woff'),\n        url('../assets/mplus-1p-light.ttf') format('truetype');\n    font-weight: 300;\n    font-style: normal;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'M+ 1p';\n    src: url('../assets/mplus-1p-heavy.eot');\n    src: url('../assets/mplus-1p-heavy.eot?#iefix') format('embedded-opentype'),\n        url('../assets/mplus-1p-heavy.woff2') format('woff2'),\n        url('../assets/mplus-1p-heavy.woff') format('woff'),\n        url('../assets/mplus-1p-heavy.ttf') format('truetype');\n    font-weight: 900;\n    font-style: normal;\n    font-display: swap;\n}\n\n// @font-face {\n//     font-family: 'M+ 1p';\n//     src: url('../assets/mplus-1p-bold.eot');\n//     src: url('../assets/mplus-1p-bold.eot?#iefix') format('embedded-opentype'),\n//         url('../assets/mplus-1p-bold.woff2') format('woff2'),\n//         url('../assets/mplus-1p-bold.woff') format('woff'),\n//         url('../assets/mplus-1p-bold.ttf') format('truetype');\n//     font-weight: bold;\n//     font-style: normal;\n//     font-display: swap;\n// }\n\n@font-face {\n    font-family: 'M+ 1p';\n    src: url('../assets/mplus-1p-black.eot');\n    src: url('../assets/mplus-1p-black.eot?#iefix') format('embedded-opentype'),\n        url('../assets/mplus-1p-black.woff2') format('woff2'),\n        url('../assets/mplus-1p-black.woff') format('woff'),\n        url('../assets/mplus-1p-black.ttf') format('truetype');\n    font-weight: 900;\n    font-style: normal;\n    font-display: swap;\n}\n","@import 'fonts';\n\n// Variables.\n$sans: 'M+ 1p';\n\n$breakpoints: (\n    'afterMobile': 650px,\n    'desktop': 1024px,\n    'wide': 2048px,\n);\n\n@mixin respond-to($name) {\n  // If the key exists in the map\n  @if map-has-key($breakpoints, $name) {\n    // Prints a media query based on the value\n    @media screen and (min-width: map-get($breakpoints, $name)) {\n      @content;\n    }\n  } @else {\n    // If the key doesn't exist in the map\n    @warn 'Unfortunately, no value could be retrieved from `#{$breakpoints}`. ' + 'Please make sure it is defined in `$breakpoints` map.';\n  }\n}\n\n\nbody {\n    background: #e7dada;\n    color: #3d393a;\n}\n\nh1 {\n    font-family: $sans;\n    font-weight: 300;\n    font-size: 3rem;\n\n    a {\n        text-decoration: none;\n        color: #e73f3f;\n\n        &:hover {\n            border-bottom: 2px solid #e78c8c;\n        }\n    }\n}\n\n// ---- Form basic styles.\n\nbutton {\n    padding: 9px 12px;\n    appearance: none;\n    font-family: $sans;\n    text-transform: uppercase;\n    font-weight: 900;\n    font-size: 35px;\n    color: #ffb2b2;\n    border-radius: 6px;\n    background: #3d393a;\n    text-shadow: 0 1px 1px #7f7f7f;\n    border: 0;\n    outline: 0;\n    margin-bottom: 1rem;\n\n    &:hover {\n      color: #e78c8c;\n      text-shadow: 0 1px 1px #191919;\n      cursor: pointer;\n    }\n\n}\n\n label {\n    font-family: $sans;\n    font-weight: 300;\n    font-size: 1.3rem;\n}\n\ninput[type=\"text\"],\ninput[type=\"number\"] {\n    font-family: $sans;\n    font-size: 1.25rem;\n    text-align: center;\n    display: block;\n    height: 30px;\n    line-height: 1.5;\n    padding: 8px 10px;\n    width: 300px;\n    margin: 0 auto 1.5rem;\n    // border-radius: 9px;\n    // border-color: #3d393a;\n\n    background: none;\n    border: 0;\n    outline: 0;\n    border-bottom: 2px solid #e78c8c;\n    color: #3d3a39;\n\n    &:focus {\n        border-bottom: 2px solid #ff2222;\n    }\n\n    &:-internal-autofill-selected {\n        background: transparent;\n    }\n}\n\n// Flag form -----------------\n\n.flag-form {\n    max-width: 800px;\n    margin: 0 auto;\n    text-align: center;\n    @include respond-to(afterMobile) {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        justify-content: space-around;\n    }\n    @include respond-to(desktop) {\n        max-width: 1024px;\n        align-items: start;\n    }\n}\n\n.flag-form__random-container {\n    @include respond-to(afterMobile) {\n        order: 1;\n        flex: auto;\n    }\n    @include respond-to(desktop) {\n        order: 2;\n    }\n}\n\n.flag-form__form {\n    margin-bottom: 2.3rem;\n    @include respond-to(afterMobile) {\n        order: 2;\n        flex: auto;\n    }\n    @include respond-to(desktop) {\n        order: 3;\n    }\n}\n\n.flag-form__flag-container {\n    @include respond-to(afterMobile) {\n        order: 3;\n        flex: auto;\n    }\n    @include respond-to(desktop) {\n        max-width: 600px;\n        order: 1;\n    }\n}\n\n// Flag -------------------------\n.flag__canvas-container {\n    margin-bottom: 2.3rem;\n\n    canvas {\n        max-width: 100%;\n    }\n\n}\n\n.flag__seed {\n    font-family: $sans;\n    font-size: 0.8rem;\n    color: #92586e;\n}\n\n.flag__attributes {\n    font-family: $sans;\n    display: block;\n    max-width: 590;\n    margin: 0 auto;\n}\n\n.flag__attributes-list {\n    text-align: left;\n}\n\n.flag__attributes-toggle {\n    text-transform: lowercase;\n    font-size: 1.3rem;\n    text-shadow: none;\n}\n\n// author ------\n.author {\n    @include respond-to(afterMobile) {\n        flex: 1 1 100%;\n    }\n}\n"],sourceRoot:""}]);const K=_}},t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={id:r,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}n.m=e,n.x=e=>{},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={321:0},t=[[771,814,660,895,633,967,60,777,417,230,645,461,739,616,14,840,341,952,628,188]],r=e=>{},a=(a,o)=>{for(var s,i,[l,f,u,c]=o,m=0,p=[];m<l.length;m++)i=l[m],n.o(e,i)&&e[i]&&p.push(e[i][0]),e[i]=0;for(s in f)n.o(f,s)&&(n.m[s]=f[s]);for(u&&u(n),a&&a(o);p.length;)p.shift()();return c&&t.push.apply(t,c),r()},o=self.webpackChunkgenerators=self.webpackChunkgenerators||[];function s(){for(var r,a=0;a<t.length;a++){for(var o=t[a],s=!0,i=1;i<o.length;i++){var l=o[i];0!==e[l]&&(s=!1)}s&&(t.splice(a--,1),r=n(n.s=o[0]))}return 0===t.length&&(n.x(),n.x=e=>{}),r}o.forEach(a.bind(null,0)),o.push=a.bind(null,o.push.bind(o));var i=n.x;n.x=()=>(n.x=i||(e=>{}),(r=s)())})(),n.x()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,