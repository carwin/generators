{"version":3,"sources":["webpack://generators/./node_modules/@carwin/flag-generator/dist/flag-gen.js"],"names":["factory","__webpack_modules__","module","__unused_webpack_exports","alea","xor128","xorwow","xorshift7","xor4096","tychei","sr","exports","__WEBPACK_AMD_DEFINE_RESULT__","global","define","Alea","seed","n","me","this","mash","data","String","i","length","h","charCodeAt","next","t","s0","c","s1","s2","copy","f","impl","opts","xg","state","prng","int32","double","quick","amdD","amdO","undefined","call","nmd","XorGen","strseed","b","d","a","Math","floor","k","result","x","y","z","w","v","X","j","limit","max","init","slice","Date","push","pool","math","nodecrypto","width","startdenom","pow","significance","overflow","mask","seedrandom","options","callback","key","shortseed","mixkey","flatten","entropy","tostring","out","randomBytes","Uint8Array","crypto","msCrypto","getRandomValues","e","browser","navigator","plugins","screen","autoseed","arc4","ARC4","g","S","pass","is_math_call","keylen","s","count","r","obj","depth","prop","typ","smear","stringseed","fromCharCode","apply","random","ex","self","trimLeft","trimRight","tinyCounter","mathRound","round","mathMin","min","mathMax","mathRandom","tinycolor","color","rgb","l","ok","format","replace","toLowerCase","match","named","names","matchers","exec","rgba","hsl","hsla","hsv","hsva","hex8","parseIntFromHex","convertHexToDecimal","hex6","hex4","hex3","stringInputToObject","isValidCSSUnit","bound01","substr","convertToPercentage","p","q","mod","hsvToRgb","hue2rgb","hslToRgb","hasOwnProperty","boundAlpha","inputToRGB","_originalInput","_r","_g","_b","_a","_roundA","_format","_gradientType","gradientType","_ok","_tc_id","rgbToHsl","rgbToHsv","rgbToHex","allow3Char","hex","pad2","toString","charAt","join","rgbaToArgbHex","convertDecimalToHex","desaturate","amount","toHsl","clamp01","saturate","greyscale","lighten","brighten","toRgb","darken","spin","hue","complement","triad","tetrad","splitcomplement","analogous","results","slices","part","ret","monochromatic","toHsv","modification","prototype","isDark","getBrightness","isLight","isValid","getOriginalInput","getFormat","getAlpha","getLuminance","RsRGB","GsRGB","BsRGB","setAlpha","value","toHsvString","toHslString","toHex","toHexString","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","secondHex8String","formatSet","formattedString","hasAlpha","clone","_applyModification","fn","args","concat","arguments","_applyCombination","fromRatio","newColor","equals","color1","color2","mix","rgb1","rgb2","readability","c1","c2","isReadable","wcag2","wcag2Parms","parms","level","size","toUpperCase","mostReadable","baseColor","colorList","includeFallbackColors","bestColor","bestScore","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","o","flipped","flip","parseFloat","isNaN","indexOf","isOnePointZero","processPercent","isPercentage","parseInt","abs","val","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","__unused_webpack_module","__webpack_exports__","__WEBPACK_DEFAULT_EXPORT__","_utilities__WEBPACK_IMPORTED_MODULE_1__","params","seedMultiplier","generateSeedMultiplier","constructor","name","generateColor","generateCount","Bend","_utilities__WEBPACK_IMPORTED_MODULE_0__","_settings__WEBPACK_IMPORTED_MODULE_1__","_division__WEBPACK_IMPORTED_MODULE_2__","default","direction","party","border","borderWidth","borderColor","super","generateDirection","generated","seedDigit","getLastDigit","modifySeed","Error","instructions","drawInstructionsDexter","drawInstructionsSinister","moveTo","lineTo","flagWidth","flagHeight","positionShift","oddDirection","index","calculated","ctx","drawSteps","drawInstructions","bendWidth","beginPath","len","len3","step","Object","keys","stepParams","values","map","shiftStep","lineWidth","strokeStyle","stroke","len2","fillStyle","fill","Border","_settings__WEBPACK_IMPORTED_MODULE_0__","_division__WEBPACK_IMPORTED_MODULE_1__","strokeRect","Canton","aspect","Chevron","drawInstructionsPalewise","drawInstructionsFesswise","reversed","chevronWidth","Cross","_division__WEBPACK_IMPORTED_MODULE_0__","_settings__WEBPACK_IMPORTED_MODULE_2__","crossType","generateCrossType","crossWidth","generateCrossWidth","generateBorderWidth","crossTypes","returnedChoice","split","funcSeed","funcSeedMultiplier","ceil","drawNordicCross","drawGreekCross","drawSymmetricCross","drawCross","test","lineLength","findGreaterNumber","borderLineLength","extra","Fesses","gapPercentage","containerWidth","singleGapWidth","singleGapPercentage","totalGapPercent","numGaps","singleFessWidthPercentage","singleFessWidth","remainingContainerWidth","incrementXpos","ypos","xpos","fillRect","Fusil","Lozenge","Pales","containerHeight","singleGapHeight","singlePaleHeightPercentage","singlePaleHeight","remainingContainerHeight","incrementYpos","Pall","pallWidth","Saltire","generateSaltireWidth","borderInfo","saltireWidth","generateSaltireBorder","_divisions_Bend__WEBPACK_IMPORTED_MODULE_1__","_divisions_Border__WEBPACK_IMPORTED_MODULE_2__","_divisions_Chevron__WEBPACK_IMPORTED_MODULE_4__","_divisions_Cross__WEBPACK_IMPORTED_MODULE_5__","_divisions_Fesses__WEBPACK_IMPORTED_MODULE_6__","_divisions_Fusil__WEBPACK_IMPORTED_MODULE_7__","_divisions_Lozenge__WEBPACK_IMPORTED_MODULE_8__","_divisions_Pales__WEBPACK_IMPORTED_MODULE_9__","_divisions_Pall__WEBPACK_IMPORTED_MODULE_10__","_divisions_Saltire__WEBPACK_IMPORTED_MODULE_11__","_settings__WEBPACK_IMPORTED_MODULE_12__","Flag","id","aspectRatio","divisionCount","divisions","generateSeed","processAspectRatioString","generatePseudoRandomRatio","dimensions","setDimensionsFromAspectObject","totalArea","generateDivisions","parentID","console","log","genLimit","numSequence","arr","opGroup","prevGroup","shuffledArr","pseudoShuffle","choiceDigit","basicOptions","divisionsOptions","shuffled","primaryColor","canvasID","generateCanvas","document","getElementById","getContext","draw","remove","settings","Utilities","flagGenerator","subFlag","randomHex","hexToRgb","convertHex","seedrandom__WEBPACK_IMPORTED_MODULE_0__","seedrandom__WEBPACK_IMPORTED_MODULE_0___default","tinycolor2__WEBPACK_IMPORTED_MODULE_2__","tinycolor2__WEBPACK_IMPORTED_MODULE_2___default","seedString","str","multiplier","strArray","seedModifier","padStart","rgbObject","splitComplement","sc","tr","te","an","mo","m","aspectObj","parent","canvas","createElement","setAttribute","appendChild","modifiedSeed","greater","__webpack_module_cache__","moduleId","loaded","getter","__esModule","definition","defineProperty","enumerable","get","Symbol","toStringTag","paths","children"],"mappings":"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","file":"main~b511eb9f.631733de009651d093cd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"FlagGen\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FlagGen\"] = factory();\n\telse\n\t\troot[\"FlagGen\"] = factory();\n})(this, function() {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./node_modules/seedrandom/index.js\":\n/*!******************************************!*\\\n  !*** ./node_modules/seedrandom/index.js ***!\n  \\******************************************/\n/*! unknown exports (runtime-defined) */\n/*! runtime requirements: module, __webpack_require__ */\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = __webpack_require__(/*! ./lib/alea */ \"./node_modules/seedrandom/lib/alea.js\");\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = __webpack_require__(/*! ./lib/xor128 */ \"./node_modules/seedrandom/lib/xor128.js\");\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = __webpack_require__(/*! ./lib/xorwow */ \"./node_modules/seedrandom/lib/xorwow.js\");\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = __webpack_require__(/*! ./lib/xorshift7 */ \"./node_modules/seedrandom/lib/xorshift7.js\");\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = __webpack_require__(/*! ./lib/xor4096 */ \"./node_modules/seedrandom/lib/xor4096.js\");\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = __webpack_require__(/*! ./lib/tychei */ \"./node_modules/seedrandom/lib/tychei.js\");\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = __webpack_require__(/*! ./seedrandom */ \"./node_modules/seedrandom/seedrandom.js\");\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n\n\n/***/ }),\n\n/***/ \"./node_modules/seedrandom/lib/alea.js\":\n/*!*********************************************!*\\\n  !*** ./node_modules/seedrandom/lib/alea.js ***!\n  \\*********************************************/\n/*! unknown exports (runtime-defined) */\n/*! runtime requirements: top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.amdD, __webpack_require__.amdO, __webpack_require__, __webpack_exports__, __webpack_require__.* */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n\n/***/ }),\n\n/***/ \"./node_modules/seedrandom/lib/tychei.js\":\n/*!***********************************************!*\\\n  !*** ./node_modules/seedrandom/lib/tychei.js ***!\n  \\***********************************************/\n/*! unknown exports (runtime-defined) */\n/*! runtime requirements: top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.amdD, __webpack_require__.amdO, __webpack_require__, __webpack_exports__, __webpack_require__.* */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n\n/***/ }),\n\n/***/ \"./node_modules/seedrandom/lib/xor128.js\":\n/*!***********************************************!*\\\n  !*** ./node_modules/seedrandom/lib/xor128.js ***!\n  \\***********************************************/\n/*! unknown exports (runtime-defined) */\n/*! runtime requirements: top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.amdD, __webpack_require__.amdO, __webpack_require__, __webpack_exports__, __webpack_require__.* */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n\n/***/ }),\n\n/***/ \"./node_modules/seedrandom/lib/xor4096.js\":\n/*!************************************************!*\\\n  !*** ./node_modules/seedrandom/lib/xor4096.js ***!\n  \\************************************************/\n/*! unknown exports (runtime-defined) */\n/*! runtime requirements: top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.amdD, __webpack_require__.amdO, __webpack_require__, __webpack_exports__, __webpack_require__.* */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n/***/ }),\n\n/***/ \"./node_modules/seedrandom/lib/xorshift7.js\":\n/*!**************************************************!*\\\n  !*** ./node_modules/seedrandom/lib/xorshift7.js ***!\n  \\**************************************************/\n/*! unknown exports (runtime-defined) */\n/*! runtime requirements: top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.amdD, __webpack_require__.amdO, __webpack_require__, __webpack_exports__, __webpack_require__.* */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n/***/ }),\n\n/***/ \"./node_modules/seedrandom/lib/xorwow.js\":\n/*!***********************************************!*\\\n  !*** ./node_modules/seedrandom/lib/xorwow.js ***!\n  \\***********************************************/\n/*! unknown exports (runtime-defined) */\n/*! runtime requirements: top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.amdD, __webpack_require__.amdO, __webpack_require__, __webpack_exports__, __webpack_require__.* */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n\n/***/ }),\n\n/***/ \"./node_modules/seedrandom/seedrandom.js\":\n/*!***********************************************!*\\\n  !*** ./node_modules/seedrandom/seedrandom.js ***!\n  \\***********************************************/\n/*! unknown exports (runtime-defined) */\n/*! runtime requirements: module, top-level-this-exports, __webpack_require__, __webpack_exports__ */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ( true && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = __webpack_require__(/*! crypto */ \"?8465\");\n  } catch (ex) {}\n} else if (true) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return seedrandom; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n\n\n/***/ }),\n\n/***/ \"./node_modules/tinycolor2/tinycolor.js\":\n/*!**********************************************!*\\\n  !*** ./node_modules/tinycolor2/tinycolor.js ***!\n  \\**********************************************/\n/*! unknown exports (runtime-defined) */\n/*! runtime requirements: module, __webpack_require__, __webpack_exports__ */\n/***/ ((module, exports, __webpack_require__) => {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;// TinyColor v1.4.2\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif ( true && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {return tinycolor;}).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n// Browser: Expose to window\nelse {}\n\n})(Math);\n\n\n/***/ }),\n\n/***/ \"./src/division.js\":\n/*!*************************!*\\\n  !*** ./src/division.js ***!\n  \\*************************/\n/*! namespace exports */\n/*! export default [provided] [no usage info] [missing usage info prevents renaming] */\n/*! other exports [not provided] [no usage info] */\n/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var tinycolor2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tinycolor2 */ \"./node_modules/tinycolor2/tinycolor.js\");\n/* harmony import */ var tinycolor2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tinycolor2__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utilities */ \"./src/utilities.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./settings */ \"./src/settings.js\");\n/**\n * @file Houses the class definitions for Divisions.\n */\n\n\n\n\n/**\n * Divisions module.\n *\n * @module flag-generator/divisions\n */\n\n/**\n * Common methods and properties of all Divisions.\n *\n * @class\n * @classdesc A collection of methods and properties common to all the Division pattern classes.\n * @requires module:flag-generator/utilities\n */\nclass Division {\n    /**\n     * Creates a Division.\n     *\n     * @example\n     * // Creates a Division. This would usually not be done.\n     * const genericDivisionObject = new Division(1, '#ffffff', '.2349785241913');\n     * @param {number} count - The number of divisions to draw.\n     * @param {number} limit - A number representing the limit for the number of divisions to draw.\n     * @param {string} color - A hexadecimal color string.\n     * @param {number} seed - A pseudo-random string generated based on a string value.\n     * @abstract\n     * @see {@link generateSeed} for more info about the seed.\n     * @todo Create a generateGap function for the Division sub-classes that might use it: Fesses, Pales, etc...\n     * @todo Create some border methods: generateBorderWidth(), etc...\n     * @todo Implement some border properties that sub-classes can use.\n     */\n  constructor(params = {count, limit, color, seed}) {\n    this.limit = params.limit;\n    this.seed = params.seed;\n    this.seedMultiplier = _utilities__WEBPACK_IMPORTED_MODULE_1__.generateSeedMultiplier(this.seed, this.constructor.name);\n    this.color = typeof params.color !== 'undefined' ? _utilities__WEBPACK_IMPORTED_MODULE_1__.generateColor(params.color) : _utilities__WEBPACK_IMPORTED_MODULE_1__.generateColor(undefined, this.seed, this.seedMultiplier);\n    this.count = typeof params.count !== 'undefined' ? params.count : _utilities__WEBPACK_IMPORTED_MODULE_1__.generateCount(params.limit, this.seed, this.seedMultiplier);\n  }\n}\n\n/**\n * CenterShape pattern.\n *\n * @class\n * @classdesc The CenterShape pattern is a generic pattern that simply creates a shape on the center of the field. Think of the Japanese flag.\n * @todo Write the CenterShape export class.\n */\nclass CenterShape {}\n\n/**\n * @TODO: This might make a better /field/ pattern than division pattern. Though technically it is a division?\n * Quarterly pattern.\n *\n * @class\n * @classdesc The Quarterly pattern describes a field with four separate and equal sections.\n * @todo Write the Quarterly export class.\n */\nclass Quarterly {}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Division);\n\n\n/***/ }),\n\n/***/ \"./src/divisions/Bend.js\":\n/*!*******************************!*\\\n  !*** ./src/divisions/Bend.js ***!\n  \\*******************************/\n/*! namespace exports */\n/*! export default [provided] [no usage info] [missing usage info prevents renaming] */\n/*! other exports [not provided] [no usage info] */\n/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Bend\n/* harmony export */ });\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utilities */ \"./src/utilities.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../settings */ \"./src/settings.js\");\n/* harmony import */ var _division__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../division */ \"./src/division.js\");\n/**\n * @file Houses the class properties and methods for the Bend division.\n */\n\n\n\n\n/**\n * Bends pattern.\n *\n * @class\n * @classdesc The Bends pattern describes a single diagonal line in either the dexter or sinister direction.\n * @augments Division\n * @namespace Divisions.Bend\n */\nclass Bend extends _division__WEBPACK_IMPORTED_MODULE_2__.default {\n    /**\n     * Creates a Bend.\n     *\n     * @example\n     * // Creates two white Bends across the flag with black borders\n     * const bend = new Bend(2, 'dexter', false, '#ffffff', undefined, true, 20, '#000000');\n     * // Creates a single Bend division as a party of the flag.\n     * const bendFilled = new Bend(1, 'sinister', true, '#ffffff');\n     * @param {number} count - The number of divisions to draw.\n     * @param {string} direction - The orientation of the Pall. One of: dexter, sinister.\n     * @param {boolean} party - Whether this division should take up an entire diagonal half of the flag.\n     * @param {string} color - A hexadecimal color string.\n     * @param {number} width - A width value for drawing the division.\n     * @param {boolean} border - Whether or not to draw a border around the Pall.\n     * @param {number} borderWidth - The width of the border.\n     * @param {string} borderColor - A hexadecimal color string.\n     * @todo Enhance the generation of border widths, possibly extrapolate whatever we come up with into parent Division class.\n     */\n  constructor(params = {seed, limit, count: 1, direction, party: false, color, width, border, borderWidth, borderColor}) {\n    let limit;\n    if (params.party) {\n      limit = 1;\n    } else {\n      limit = params.limit ? params.limit : 3;\n    }\n\n    super({seed: params.seed, count: params.count, limit, color: params.color});\n\n    this.party = params.party;\n    this.border = params.border;\n    this.width = params.width;\n    this.direction = typeof params.direction !== 'undefined' ? params.direction : this.generateDirection(this.seed);\n    // this.borderWidth = borderWidth > 0 ? borderWidth : this.generateSaltireWidth((settings.seed * .1234));\n    this.borderWidth = params.borderWidth || 50;\n    this.borderColor = params.borderColor || _utilities__WEBPACK_IMPORTED_MODULE_0__.generateColor(undefined, .50000);\n  }\n    /**\n     * Generate a direction value for the Bend.\n     *\n     * @example\n     * // Returns 'dexter'\n     * const newBend = new Bend();\n     * newBend.generateDirection(.1337)\n     * @param {number} seed - The seed number used for generated values.\n     * @returns {string} - One of: 'dexter', 'sinister'.\n     */\n    generateDirection(seed = this.seed) {\n      let generated;\n      const seedDigit = _utilities__WEBPACK_IMPORTED_MODULE_0__.getLastDigit(_utilities__WEBPACK_IMPORTED_MODULE_0__.modifySeed(seed, this.seedMultiplier));\n      if (seedDigit >=0 && seedDigit <= 5) {\n        generated = 'dexter';\n      } else if (seedDigit >=6 && seedDigit <= 9) {\n        generated = 'sinister';\n      } else {\n        throw new Error('seedDigit was not between 0 and 9');\n      }\n      return generated;\n    }\n    /**\n     * Returns the proper draw function instructions for a given direction.\n     *\n     * @example\n     * // Returns drawInstructionsDexter();\n     * const bend = new Bends();\n     * chevron.drawInstructions('dexter');\n     * @param {string} direction - One of: dexter, sinister.\n     * @returns {Function} The draw instruction function corresponding to the direction.\n     */\n    drawInstructions(direction) {\n      let instructions;\n      switch (direction) {\n        case 'dexter':\n          instructions = this.drawInstructionsDexter();\n          break;\n        case 'sinister':\n          instructions = this.drawInstructionsSinister();\n          break;\n        default:\n          throw new Error('Direction passed to Bend\\'s drawInstructions method was not one of \\'sinister\\' or \\'dexter\\'.');\n        }\n        return instructions;\n    }\n\n    /**\n     * Generates the draw instructions for the palewise and palewiseReversed directions.\n     *\n     * @example\n     * // Returns an instruction set for the palewise direction based on the flag dimensions.\n     * // [\n     * //     {moveTo: [x, y]},\n     * //     {lineTo: [x, y]},\n     * //     {lineTo: [x, y]},\n     * // ]\n     * const bends = new Bends();\n     * const instructions = bends.drawInstructionsDexter();\n     * @param {boolean} party - Whether or not the division should be filled.\n     * @returns {Array} An array of objects containing canvas drawing instructions.\n     */\n    drawInstructionsDexter(party = this.party) {\n        let instructions;\n        if (!party) {\n            instructions = [\n                {moveTo: [0, 0]}, // start top-left\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight]}, // draw to bottom-right\n            ]\n        } else {\n            instructions = [\n                {moveTo: [0, 0]}, // start top-left\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight]}, // draw to bottom-right\n                {lineTo: [0, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight]}, // draw to bottom-left\n                {lineTo: [0, 0]}, // draw to top-left\n            ]\n        }\n        return instructions;\n    }\n    /**\n     * Generates the draw instructions for the sinister.\n     *\n     * @example\n     * // Returns an instruction set for the sinister direction based on the flag dimensions.\n     * // [\n     * //     {moveTo: [x, y]},\n     * //     {lineTo: [x, y]},\n     * //     {lineTo: [x, y]},\n     * // ]\n     * const bends = new Bends();\n     * const instructions = bends.drawInstructionsSinister();\n     * @param {boolean} party - Whether or not the division should be filled.\n     * @returns {Array} An array of objects containing canvas drawing instructions.\n     */\n    drawInstructionsSinister(party = this.party) {\n        let instructions;\n        if (!party) {\n            instructions = [\n                {moveTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth, 0]}, // start top right\n                {lineTo: [0, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight]}, // draw to bottom left\n            ];\n        } else {\n            instructions = [\n                {moveTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth, 0]}, // start top right\n                {lineTo: [0, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight]}, // draw to bottom left\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight]}, // draw to bottom right\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth, 0]}, // draw to top right\n            ];\n        }\n        return instructions;\n    }\n\n    /**\n     * A semi-curried function that applies the passed arguments to drawSteps.\n     * Used as a callback for array.map() to pass arguments into the map function's\n     * callback function.\n     *\n     * @example\n     * // Applies a shift width of 100 to a drawStep's parameters.\n     * for (let i = 0, len = drawSteps.length; i < len; i++) {\n           const step = Object.keys(drawSteps[i]);\n           const stepParams = Object.values(drawSteps[i])[0];\n           ctx[step](...stepParams.map(shiftStep(positionShift, 'sinister', 'dexter')));\n     * }\n     * @param {number} positionShift - The value by which we will shift the inner function's p parameter.\n     * @param {string} direction - The string value of the current operating direction.\n     * @param {string} oddDirection - The odd-man-out direction that needs special processing.\n     * @returns {Function} A callback function that operates using the values of shiftStep().\n     * @todo The shift position is based entirely on 3:5 flags, make it more... Betterer...\n     * @todo Come up with a better description, and maybe a better name for the oddDirection parameter.\n     */\n    shiftStep(positionShift, direction, oddDirection) {\n      return (p, index) => {\n        // If the direction is the oddDirection, we need to add the positionShift to\n        // the x coordinate (0) and subtract the positionShift from the y coordinate (1).\n        let calculated;\n        if (direction === oddDirection) {\n            calculated = index === 0 ? p + positionShift : p - positionShift;\n        }\n            // If the direction is not the oddDirection, we can simply add the positionShift\n        // to both the x and y coords.\n        else {\n            calculated = p + positionShift;\n        }\n        return calculated;\n      }\n    }\n    /**\n     * Draws the Chevron division on a canvas.\n     *\n     * @example\n     * // Draws the Bends division on the canvas.\n     * const bend = new Bend();\n     * bend.draw(ctx);\n     * @param {object} ctx - An object containing a canvas context.\n     */\n    draw(ctx) {\n        const drawSteps = this.drawInstructions(this.direction);\n        const bendWidth = this.width || Math.round(this.seed * 100);\n        ctx.beginPath();\n\n        // Bends has a ton of possible options, so we start by looping over the count.\n        for (let i = 0, len = this.count; i < len; i++) {\n            // If we have more than one bend to draw, we need to set some\n            // offsets for the second and third bends. That's what's happening\n            // here with the switch and the positionShift variable.\n            let positionShift = 0;\n            // If there are 2 bends, split them somewhat equally from the center.\n            if (this.count === 2) {\n                switch (true) {\n                    case i === 0 && !this.party:\n                        positionShift = -70;\n                        break;\n                    case i === 1:\n                        positionShift = 70;\n                        break;\n                }\n                // If there are 3 bends, draw one in the center and the others spaced equally from it.\n            } else if (this.count === 3) {\n                switch (i) {\n                    case 0:\n                        positionShift = 0;\n                        break;\n                    case 1:\n                        positionShift = -100;\n                        break;\n                    case 2:\n                        positionShift = 100;\n                        break;\n                }\n            }\n            // Now that we have that out of the way, let's do some drawing.\n            // Loop over the draw steps. For each step, apply the position shift\n            // we decided on above.\n            //\n            // We'll start with borders, since they sit behind the main drawing.\n            // If there's a border, draw it first with a larger width.\n            if (this.border && !this.party) {\n                for (let k = 0, len3 = drawSteps.length; k < len3; k++) {\n                    const step = Object.keys(drawSteps[k]);\n                    const stepParams = Object.values(drawSteps[k])[0];\n                    // This is a pretty complicated set of instructions. If you're\n                    // having trouble following the logic, it's repeated and\n                    // documented in the shiftStep function definition.\n                    // Basically, we're applying the positionShift to the bend coords.\n                    ctx[step](...stepParams.map(this.shiftStep(positionShift, this.direction, 'dexter')));\n                }\n                ctx.lineWidth = bendWidth + this.borderWidth;\n                ctx.strokeStyle = this.color.complement;\n                ctx.stroke();\n            }\n\n            // Keep in mind this is a loop within a loop, so for every bend (outer loop),\n            // we're running each of the draw steps (inner loop).\n            for (let j = 0, len2 = drawSteps.length; j < len2; j++) {\n                // Get the method name from the drawStep's key.\n                const step = Object.keys(drawSteps[j]);\n                // Get the parameters to apply to each method. These are all x,y coordinates.\n                const stepParams = Object.values(drawSteps[j])[0];\n                // Run the method off of the ctx object, that's what it references!\n                // For the parameters, send them all using the ... notation, and then run\n                // an array.map() callback to apply the position shift.\n                ctx[step](...stepParams.map(this.shiftStep(positionShift, this.direction, 'dexter')));\n            }\n            // If we're drawing the division as a party, we can only have a single bend.\n            // Instead of stroking the path, we're going to fill it so that it takes up\n            // a diagonal half of the entire flag.\n            if (this.party) {\n                ctx.fillStyle = this.color.color;\n                ctx.fill();\n                // Since we can only have 1 Bend if we're drawing it as a party, let's break\n                // the loop as soon as we've created it.\n                break;\n            }\n                // If we don't want a party per bend, we'll stroke the lines we drew during the\n                // earlier drawStep stage, then continue on with the loop in case there are\n            // more bends to draw.\n            else {\n                ctx.strokeStyle = this.color.color;\n                ctx.lineWidth = bendWidth;\n                ctx.stroke();\n            }\n        }\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/divisions/Border.js\":\n/*!*********************************!*\\\n  !*** ./src/divisions/Border.js ***!\n  \\*********************************/\n/*! namespace exports */\n/*! export default [provided] [no usage info] [missing usage info prevents renaming] */\n/*! other exports [not provided] [no usage info] */\n/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Border\n/* harmony export */ });\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../settings */ \"./src/settings.js\");\n/* harmony import */ var _division__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../division */ \"./src/division.js\");\n/**\n * @file Houses the class properties and methods for the Border division.\n */\n\n\n\n/** Border pattern.\n *\n * @class\n * @classdesc The Border pattern on a flag describes a border around each edge of the field.\n * <br>\n * If multiple Divisions are ever combined on a flag, the Border pattern should likely be\n * drawn last to provide a frame effect.\n * @augments Division\n * @namespace Division.Border\n */\nclass Border extends _division__WEBPACK_IMPORTED_MODULE_1__.default {\n    /**\n     * Creates Border.\n     *\n     * @example\n     * // Instantiates a Border\n     * const border = new Border(20);\n     * @param {string} color - A hex color value.\n     * @param {number} borderWidth - A number representing the size of the border. This is used for coordinate drawing on a canvas for now.\n     * @augments Division\n     * @todo Handle border width more elegantly than taking a flat value from the caller.\n     */\n  constructor(params = {seed, color, borderWidth}) {\n    const limit = 1;\n    const count = 1;\n    super({seed: params.seed, count, limit, color: params.color});\n    this.borderWidth = params.borderWidth || 20;\n  }\n  /**\n   * Draws the Border pattern on a canvas.\n   *\n   * @example\n   * // Draws the Border pattern.\n   * border.draw(ctx);\n   * @param {object} ctx - An object containing a canvas context.\n   */\n  draw(ctx) {\n    // Set the line width\n    ctx.lineWidth = this.borderWidth;\n    ctx.strokeStyle = this.color.color;\n    ctx.strokeRect(0, 0, _settings__WEBPACK_IMPORTED_MODULE_0__.default.flagWidth, _settings__WEBPACK_IMPORTED_MODULE_0__.default.flagHeight);\n  }\n}\n\n\n/***/ }),\n\n/***/ \"./src/divisions/Canton.js\":\n/*!*********************************!*\\\n  !*** ./src/divisions/Canton.js ***!\n  \\*********************************/\n/*! namespace exports */\n/*! export Canton [provided] [no usage info] [missing usage info prevents renaming] */\n/*! other exports [not provided] [no usage info] */\n/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Canton\": () => /* binding */ Canton\n/* harmony export */ });\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../settings */ \"./src/settings.js\");\n/* harmony import */ var _division__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../division */ \"./src/division.js\");\n/**\n * @file Houses the class properties and methods for the Canton division.\n */\n\n\n\n/**\n * Canton pattern.\n *\n * @class\n * @classdesc The Canton pattern describes a small quarter of the flag, usually the top dexter quarter. It is often filled by a pattern, like in the flag of the United States, or an entire flag in the case of many British colony flags.\n * @augments Division\n * @namespace Divisions.Canton\n * @todo Write the Canton export class.\n */\nclass Canton extends _division__WEBPACK_IMPORTED_MODULE_1__.default {\n    constructor(color, aspect) {\n        const limit = 1;\n        super(1, limit, color);\n        this.aspect = aspect;\n    }\n    drawInstructions() {\n        return [\n            {moveTo: [0, 0]}, // start top-left\n            {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_0__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_0__.default.flagHeight / 2]}, // draw to center\n            {lineTo: [0, _settings__WEBPACK_IMPORTED_MODULE_0__.default.flagHeight]}, // draw to bottom left.\n        ];\n    }\n    draw() {\n\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/divisions/Chevron.js\":\n/*!**********************************!*\\\n  !*** ./src/divisions/Chevron.js ***!\n  \\**********************************/\n/*! namespace exports */\n/*! export default [provided] [no usage info] [missing usage info prevents renaming] */\n/*! other exports [not provided] [no usage info] */\n/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Chevron\n/* harmony export */ });\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utilities */ \"./src/utilities.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../settings */ \"./src/settings.js\");\n/* harmony import */ var _division__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../division */ \"./src/division.js\");\n/**\n * @file Houses the class properties and methods for the Chevron division.\n */\n\n\n\n\n/** Chevron pattern.\n *\n * @class\n * @classdesc The Chevron pattern describes two diagonal lines beginning from two corners and stopping in the center of the field where they meet.\n * @augments Division\n * @namespace Divisions.Chevron\n */\nclass Chevron extends _division__WEBPACK_IMPORTED_MODULE_2__.default {\n    /**\n     * Creates a Chevron.\n     *\n     * @example\n     * // Creates a horizontally oriented, white Pall with a black border.\n     * const pall = new Pall('fesswise', '#ffffff', true, 20, '#000000');\n     * @param {string} direction - The orientation of the Pall. One of: fesswise, palewise, fesswiseReversed, palewiseReverse.\n     * @param {string} color - A hexadecimal color string.\n     * @param {number} width - A width value for drawing the division.\n     * @param {boolean} border - Whether or not to draw a border around the Pall.\n     * @param {number} borderWidth - The width of the border.\n     * @param {string} borderColor - A hexadecimal color string.\n     */\n  constructor(params = {direction, color, width, border, borderWidth, borderColor, seed}) {\n    // Only 1 Chevron per instance, ever.\n    const limit = 1;\n    super({seed: params.seed, count: 1, limit, color: params.color});\n    this.border = params.border;\n    this.width = params.width;\n    this.direction = typeof params.direction !== 'undefined' ? params.direction : this.generateDirection();\n\n    // @TODO: extrapolate generateSaltireWidth into Division.\n    // this.borderWidth = borderWidth > 0 ? borderWidth : this.generateSaltireWidth((settings.seed * .1234));\n    this.borderWidth = params.borderWidth || 50;\n    this.borderColor = params.borderColor || _utilities__WEBPACK_IMPORTED_MODULE_0__.generateColor(undefined, .50000);\n  }\n    /**\n     * Generate a direction value for the Chevron.\n     *\n     * @example\n     * // Returns 'palewiseReversed'\n     * const newChevron = new Chevron();\n     * newPale.generateDirection(.1337)\n     * @param {number} seed - The seed number used for generated values.\n     * @returns {string} - One of: 'pallwise', 'fesswise', 'pallwiseReversed', 'fesswiseReversed'.\n     * @todo Rethink the directions, use some kind of probability or something more elegant than this.\n     */\n    generateDirection(seed = this.seed) {\n        let generated;\n        const seedDigit = _utilities__WEBPACK_IMPORTED_MODULE_0__.getLastDigit(_utilities__WEBPACK_IMPORTED_MODULE_0__.modifySeed(this.seed, this.seedMultiplier));\n        if (seedDigit >=1 && seedDigit <= 3) {\n            generated = 'palewise';\n        } else if (seedDigit === 4 || seedDigit === 5) {\n            generated = 'fesswise';\n        } else if (seedDigit === 6 || seedDigit === 7) {\n            generated = 'palewiseReversed';\n        } else if (seedDigit === 8 || seedDigit === 9) {\n            generated = 'fesswiseReversed';\n        } else {\n            generated = 'fesswiseReversed';\n        }\n        return generated;\n    }\n\n    /**\n     * Returns the proper draw function instructions for a given direction.\n     *\n     * @example\n     * // Returns drawInstructionsPalewise();\n     * const chevron = new Chevron();\n     * chevron.drawInstructions('palewise');\n     * @param {string} direction - One of: 'fesswise', 'palewise', 'fesswiseReversed', 'palewiseReversed'.\n     * @returns {Function} The draw instruction function corresponding to the direction.\n     */\n    drawInstructions(direction) {\n        let instructions;\n        switch (direction) {\n            case 'palewise':\n                instructions = this.drawInstructionsPalewise();\n                break;\n            case 'palewiseReversed':\n                instructions = this.drawInstructionsPalewise(true);\n                break;\n            case 'fesswise':\n                instructions = this.drawInstructionsFesswise();\n                break;\n            case 'fesswiseReversed':\n                instructions = this.drawInstructionsFesswise(true);\n                break;\n        }\n        return instructions;\n    }\n\n    /**\n     * Generates the draw instructions for the palewise and palewiseReversed directions.\n     *\n     * @example\n     * // Returns an instruction set for the palewise direction based on the flag dimensions.\n     * // [\n     * //     {moveTo: [x, y]},\n     * //     {lineTo: [x, y]},\n     * //     {lineTo: [x, y]},\n     * // ]\n     * const chevron = new Chevron();\n     * const instructions = chevron.drawInstructionsPalewise();\n     * @param {boolean} reversed - Whether or not to return the reverse draw instructions.\n     * @returns {Array} An array of objects containing canvas drawing instructions.\n     */\n    drawInstructionsPalewise(reversed) {\n        let instructions;\n        if (!reversed) {\n            instructions = [\n                {moveTo: [0, 0]}, // start top-left\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight / 2]}, // draw to center\n                {lineTo: [0, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight]}, // draw to bottom left.\n            ]\n        } else {\n            instructions = [\n                {moveTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth, 0]}, // start top-right\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight / 2]}, // draw to center\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight]}, // draw to bottom right\n            ]\n        }\n        return instructions;\n    }\n    /**\n     * Generates the draw instructions for the fesswise and fesswiseReversed directions.\n     *\n     * @example\n     * // Returns an instruction set for the fesswise direction based on the flag dimensions.\n     * // [\n     * //     {moveTo: [x, y]},\n     * //     {lineTo: [x, y]},\n     * //     {lineTo: [x, y]},\n     * // ]\n     * const chevron = new Chevron();\n     * const instructions = chevron.drawInstructionsFesswise();\n     * @param {boolean} reversed - Whether or not to return the reverse draw instructions.\n     * @returns {Array} An array of objects containing canvas drawing instructions.\n     */\n    drawInstructionsFesswise(reversed) {\n        let instructions;\n        if (!reversed) {\n            instructions = [\n                {moveTo: [0, 0]}, // start top left\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight / 2]}, // draw to center\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth, 0]}, // draw to top right\n            ];\n        } else {\n            instructions = [\n                {moveTo: [0, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight]}, // start bottom left\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight / 2]}, // draw to center\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight]}, // draw to bottom right\n            ];\n        }\n        return instructions;\n    }\n\n    /**\n     * Draws the Chevron division on a canvas.\n     *\n     * @example\n     * // Draws the Chevron division on the canvas.\n     * const chevron = new Chevron();\n     * chevron.draw(ctx);\n     * @param {object} ctx - An object containing a canvas context.\n     */\n    draw(ctx) {\n        const drawSteps = this.drawInstructions(this.direction);\n        const chevronWidth = this.width || Math.round(this.seed * 100);\n        ctx.beginPath();\n\n        // If there's a border, draw it first with a larger width.\n        if (this.border) {\n            for (let i = 0, len = drawSteps.length; i < len; i++) {\n                const step = Object.keys(drawSteps[i]);\n                const stepParams = Object.values(drawSteps[i])[0];\n                ctx[step](...stepParams);\n            }\n            ctx.lineWidth = chevronWidth + this.borderWidth;\n            ctx.strokeStyle = this.color.complement;\n            ctx.stroke();\n        }\n\n        for (let i = 0, len = drawSteps.length; i < len; i++) {\n            const step = Object.keys(drawSteps[i]);\n            const stepParams = Object.values(drawSteps[i])[0];\n            ctx[step](...stepParams);\n        }\n\n        ctx.strokeStyle = this.color.color;\n        ctx.lineWidth = chevronWidth;\n        ctx.stroke();\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/divisions/Cross.js\":\n/*!********************************!*\\\n  !*** ./src/divisions/Cross.js ***!\n  \\********************************/\n/*! namespace exports */\n/*! export default [provided] [no usage info] [missing usage info prevents renaming] */\n/*! other exports [not provided] [no usage info] */\n/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Cross\n/* harmony export */ });\n/* harmony import */ var _division__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../division */ \"./src/division.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utilities */ \"./src/utilities.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../settings */ \"./src/settings.js\");\n\n\n\n\n/**\n * Cross pattern.\n *\n * @class\n * @classdesc The Cross pattern describes two intersecting divisions of the field.\n * @augments Division\n * @namespace Divisions.Pales\n */\nclass Cross extends _division__WEBPACK_IMPORTED_MODULE_0__.default {\n\n  constructor(params = {crossType, color, width, border: false, borderWidth, borderColor}) {\n    const count = 1;\n    const limit = 1;\n    super({seed: params.seed, count, limit, color: params.color});\n    this.crossType = typeof params.crossType !== 'undefined' ? params.crossType : this.generateCrossType(this.seed, this.seedMultiplier);\n    this.crossWidth = params.width || this.generateCrossWidth(this.seed, this.seedMultiplier);\n    this.border = params.border;\n    this.borderWidth = params.borderWidth || this.generateBorderWidth(this.seed + this.seedMultiplier); // @todo Generate a border width\n    this.borderColor = _utilities__WEBPACK_IMPORTED_MODULE_1__.generateColor(params.borderColor) || _utilities__WEBPACK_IMPORTED_MODULE_1__.generateColor(undefined, this.seed * this.seedMultiplier, this.seedMultiplier);\n  }\n\n  /**\n   * Generates a \"crossType\" string.\n   *\n   * @example\n   * // Returns 'greek'.\n   * const newCross = new Cross();\n   * newCross.generateCrossType(.123, .1);\n   * @param {number} seed - A number less than one and more than 0 is expected.\n   * @param {number} seedMultiplier - A number less than one and more than 0 is expected.\n   * @returns {string} One of the available crossTypes: nordic, greek, symmetric.\n   */\n  generateCrossType(seed, seedMultiplier) {\n    const crossTypes = ['nordic', 'greek', 'symmetric']\n    // Generate a number between 0 & 2 to choose from the list of crossTypes.\n    let choice = (seed * seedMultiplier * seed);\n    let returnedChoice;\n    // Let's be weird and loop over every digit in the multiplier and pick the last 0, 1, or 2.\n    ('' + choice).split('').map((v, i) => {\n      if (parseInt(v) === 0 || parseInt(v) === 1 || parseInt(v) === 2) {\n        returnedChoice = crossTypes[parseInt(v)];\n      }\n    })\n    return returnedChoice;\n  }\n\n  generateCrossWidth(seed, seedMultiplier) {\n    const funcSeed = seed || this.seed;\n    const funcSeedMultiplier = seedMultiplier || this.seedMultiplier;\n    let width;\n    width = Math.ceil(_utilities__WEBPACK_IMPORTED_MODULE_1__.modifySeed(funcSeed, funcSeedMultiplier) * 100) + 1; // Add one so we never have 0.\n    if (width >= 100) {\n      width = width / 2; // Cap width at 100, any larger and we lose the shape.\n    }\n    return width;\n  }\n\n  generateBorderWidth() {\n    return this.crossWidth + (this.crossWidth * .6); // Return a border that's +6% of the cross' width.\n  }\n\n  draw(ctx) {\n    switch(this.crossType) {\n    case 'nordic':\n      this.drawNordicCross(ctx);\n      break;\n    case 'greek':\n      this.drawGreekCross(ctx);\n      break;\n    case 'symmetric':\n      this.drawSymmetricCross(ctx);\n      break;\n    }\n  }\n\n  drawNordicCross(ctx) {\n\n    const drawCross = (width, color) => {\n      ctx.beginPath();\n      // straight across.\n      ctx.moveTo(0, _settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight/2);\n      ctx.lineTo(_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth, _settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight/2);\n      // the vertical line.\n      ctx.moveTo(_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth / 3, 0);\n      ctx.lineTo(_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth / 3, _settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight);\n\n      ctx.strokeStyle = color;\n      ctx.lineWidth = width;\n      ctx.stroke();\n    }\n\n    if (this.border === true && this.borderWidth > 0 && /^#/.test(this.borderColor.color)) {\n      drawCross(this.borderWidth, this.borderColor.color);\n      drawCross(this.crossWidth, this.color.color);\n    } else {\n      drawCross(this.crossWidth, this.color.color);\n    }\n\n  }\n\n  drawGreekCross(ctx) {\n    const lineLength = _utilities__WEBPACK_IMPORTED_MODULE_1__.findGreaterNumber(_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth, _settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight) * .20; // 20% of either the flag height or width, whichever is greater.\n    const borderLineLength = (lineLength + (this.borderWidth / 12)); // Divide by twelve because that's the number of edges.\n\n    const drawCross = (width, color, extra = 0) => {\n      ctx.beginPath();\n      ctx.moveTo(_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight/2); // move to center.\n      ctx.lineTo((_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth / 2) - (extra + +(extra - lineLength)), (_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight / 2));\n      ctx.moveTo(_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight/2); // move to center.\n      ctx.lineTo((_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth / 2) + (extra + +(extra - lineLength)), (_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight / 2));\n      ctx.moveTo(_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight / 2); // move to center.\n      ctx.lineTo((_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth / 2), (_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight / 2) - (extra + +(extra - lineLength)));\n      ctx.moveTo(_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight / 2); // move to center.\n      ctx.lineTo((_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth / 2), (_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight / 2) + (extra + +(extra - lineLength)));\n      ctx.strokeStyle = color;\n      ctx.lineWidth = width;\n      ctx.stroke();\n    }\n\n    if (this.border === true && this.borderWidth > 0 && /^#/.test(this.borderColor.color)) {\n      drawCross(this.borderWidth, this.borderColor.color, borderLineLength);\n      drawCross(this.crossWidth, this.color.color);\n    } else {\n      drawCross(this.crossWidth, this.color.color);\n    }\n\n  }\n\n  drawSymmetricCross(ctx) {\n\n    const drawCross = (width, color) => {\n      ctx.beginPath();\n      // straight across.\n      ctx.moveTo(0, _settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight/2);\n      ctx.lineTo(_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth, _settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight/2);\n      // the vertical line.\n      ctx.moveTo(_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth / 2, 0);\n      ctx.lineTo(_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight);\n      ctx.strokeStyle = color;\n      ctx.lineWidth = width;\n      ctx.stroke();\n    }\n\n    if (this.border === true && this.borderWidth > 0 && /^#/.test(this.borderColor.color)) {\n      drawCross(this.borderWidth, this.borderColor.color);\n      drawCross(this.crossWidth, this.color.color);\n    } else {\n      drawCross(this.crossWidth, this.color.color);\n    }\n  }\n\n}\n\n\n/***/ }),\n\n/***/ \"./src/divisions/Fesses.js\":\n/*!*********************************!*\\\n  !*** ./src/divisions/Fesses.js ***!\n  \\*********************************/\n/*! namespace exports */\n/*! export default [provided] [no usage info] [missing usage info prevents renaming] */\n/*! other exports [not provided] [no usage info] */\n/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Fesses\n/* harmony export */ });\n/* harmony import */ var _division__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../division */ \"./src/division.js\");\n/**\n * @file Houses the class properties and methods for the Fesses division.\n */\n\n\n/**\n * Fesses pattern.\n *\n * @class\n * @classdesc The Fesses pattern describes one or more vertical divisions of the field.\n * @augments Division\n */\nclass Fesses extends _division__WEBPACK_IMPORTED_MODULE_0__.default {\n  /**\n   * Create fesses.\n   *\n   * @example\n   * // Returns a Fesses instance.\n   * const fesses = new Fesses(2, '#3febeb');\n   * @param {number} gapPercentage - A whole number representing a percentage of the containerWidth. Used to place gaps during draw time.\n   * @param {string} color - A hexadecimal color string.\n   * @todo Switch up the draw function to use draw instructions in the same way as the Pall division.\n   */\n  constructor(params = {seed, count, gapPercentage, color}) {\n    const limit = 3;\n    super({seed: params.seed, count: params.count, limit, color: params.color});\n    this.gapPercentage = params.gapPercentage || 0;\n  }\n    /**\n     * Draw Fesses on a canvas.\n     *\n     * @example\n     * // Draws a Fesses instance on a canvas.\n     * fesses.drawFesses(ctx, 500);\n     * @param {object} ctx - A canvas Context.\n     * @param {number} containerWidth - The width of the area on which to draw Fesses.\n     * @param {number} gapPercentage - A whole number representing a percentage of the containerWidth.\n     * @todo  The gapPercentage cannot exceed a certain value, but I don't know how to calculate a stop. Keep it below 20. It's probably something like: the gap percentage cannot exceed a certain value based on the number of gaps.\n     */\n    draw(ctx, containerWidth = 500, gapPercentage = this.gapPercentage) {\n        let singleGapWidth,\n            singleGapPercentage,\n            totalGapPercent,\n            numGaps,\n            singleFessWidthPercentage,\n            singleFessWidth,\n            remainingContainerWidth;\n\n        // If we're only drawing 1 division, center it.\n        if (this.count === 1) {\n            gapPercentage = 33;\n        }\n        // What percentage of the whole WIDTH should each fess take up?\n        singleFessWidthPercentage = ((100 / this.count)) / 100;\n        // Given the current count of Fesses, how many gaps are there? One on each side and N gaps between.\n        numGaps = (this.count * 2) - (this.count - 1); // I don't remember how I arrived at this, but it seems correct.\n        // Turn our whole number gapPercentage into a decimal for math.\n        singleGapPercentage = gapPercentage / 100; // Divide the whole number value by 100 to get a decimal.\n        // Get the total % of the container width taken up by gaps.\n        totalGapPercent = singleGapPercentage * numGaps; // Multiply the decimal from above by the number of gaps to get a total % value of the whole. Useful for later.\n        // How wide is a single gap?\n        singleGapWidth = (containerWidth * singleGapPercentage);\n        // How much of the flag is left for Fesses after we draw gaps?\n        remainingContainerWidth = containerWidth - (totalGapPercent * containerWidth);\n        // Calculate the width of a single Fess by multiplying the fess width percentage by the remaining flag width.\n        singleFessWidth = (singleFessWidthPercentage * remainingContainerWidth);\n\n        // Figure out x/y coordinates for each fess\n        let incrementXpos = singleGapWidth;\n        for (let i = 0; i < this.count; i++) {\n            // ctx.fillStyle = randomHex(settings.seed, i + 2); // @TODO: Handle color more elegantly, I'd like the colors to be complimentary.\n            switch (this.count) {\n                case 1:\n                    ctx.fillStyle = this.color.color;\n                    break;\n                case 2:\n                    ctx.fillStyle = i === 0 ? this.color.color : this.color.complement;\n                    break;\n                case 3:\n                    ctx.fillStyle = this.color.triad[i];\n                    break;\n                case 4:\n                    ctx.fillStyle = this.color.tetrad[i]\n                    break;\n                default:\n                    ctx.fillStyle = this.color.monochromatic[i];\n                    break;\n            }\n            let ypos = 0; // start at the top always\n            let xpos = incrementXpos;\n            let w = singleFessWidth;\n            let h = 300;\n            incrementXpos = incrementXpos + singleFessWidth + singleGapWidth;\n            ctx.fillRect(xpos, ypos, w, h);\n        }\n\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/divisions/Fusil.js\":\n/*!********************************!*\\\n  !*** ./src/divisions/Fusil.js ***!\n  \\********************************/\n/*! namespace exports */\n/*! export default [provided] [no usage info] [missing usage info prevents renaming] */\n/*! other exports [not provided] [no usage info] */\n/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Fusil\n/* harmony export */ });\n/* harmony import */ var _division__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../division */ \"./src/division.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utilities */ \"./src/utilities.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../settings */ \"./src/settings.js\");\n\n\n\n\nclass Fusil extends _division__WEBPACK_IMPORTED_MODULE_0__.default {\n\n  constructor(params = {seed, color}) {\n    const count = 1;\n    const limit = 1;\n    super({seed: params.seed, count, limit, color: params.color});\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.moveTo(_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth / 2, 0); // top center\n    ctx.lineTo(_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth - (_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth / 4), _settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight / 2); // right center\n    ctx.lineTo(_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight); // bottom center\n    ctx.lineTo(0 + (_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth / 4), _settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight / 2); // left center\n    ctx.fillStyle = this.color.color;\n    ctx.fill();\n  }\n\n}\n\n\n/***/ }),\n\n/***/ \"./src/divisions/Lozenge.js\":\n/*!**********************************!*\\\n  !*** ./src/divisions/Lozenge.js ***!\n  \\**********************************/\n/*! namespace exports */\n/*! export default [provided] [no usage info] [missing usage info prevents renaming] */\n/*! other exports [not provided] [no usage info] */\n/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Lozenge\n/* harmony export */ });\n/* harmony import */ var _division__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../division */ \"./src/division.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utilities */ \"./src/utilities.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../settings */ \"./src/settings.js\");\n\n\n\n\nclass Lozenge extends _division__WEBPACK_IMPORTED_MODULE_0__.default {\n\n  constructor(params = {seed, color}) {\n    const count = 1;\n    const limit = 1;\n    super({seed: params.seed, count, limit, color: params.color});\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.moveTo(_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth / 2, 0); // top center\n    ctx.lineTo(_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth, _settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight / 2); // right center\n    ctx.lineTo(_settings__WEBPACK_IMPORTED_MODULE_2__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight); // bottom center\n    ctx.lineTo(0, _settings__WEBPACK_IMPORTED_MODULE_2__.default.flagHeight / 2); // left center\n    ctx.fillStyle = this.color.color;\n    ctx.fill();\n  }\n\n}\n\n\n/***/ }),\n\n/***/ \"./src/divisions/Pales.js\":\n/*!********************************!*\\\n  !*** ./src/divisions/Pales.js ***!\n  \\********************************/\n/*! namespace exports */\n/*! export default [provided] [no usage info] [missing usage info prevents renaming] */\n/*! other exports [not provided] [no usage info] */\n/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Pales\n/* harmony export */ });\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../settings */ \"./src/settings.js\");\n/* harmony import */ var _division__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../division */ \"./src/division.js\");\n/**\n * @file Houses the class properties and methods for the Pales division.\n */\n\n\n\n/** Pales pattern.\n *\n * @class\n * @classdesc The Pales pattern describes one or more horizontal divisions of the field.\n * @augments Division\n * @namespace Divisions.Pales\n */\nclass Pales extends _division__WEBPACK_IMPORTED_MODULE_1__.default {\n    /**\n     * Instantiates a Pales pattern.\n     *\n     * @example\n     * // Instantiates a Pales pattern.\n     * const pales = new Pales()\n     * @param {number} count - The number of Pales in this instance.\n     * @param {number} gapPercentage - A whole number representing a percentage of the containerWidth. Used to place gaps during draw time.\n     * @param {string} color - A hexadecimal color string.\n     * @todo The count limit of 3 is only here because I can't figure out a way\n     *       to make 4 consistently look good. It always comes out like a rainbow\n     *       or a monochrome step.\n     */\n  constructor(params = {count, gapPercentage, color}) {\n    const limit = 3; // No more than 3 Pales per instance.\n    super({seed: params.seed, count: params.count, limit, color: params.color});\n    this.gapPercentage = params.gapPercentage || 0;\n  }\n    draw(ctx, containerWidth = _settings__WEBPACK_IMPORTED_MODULE_0__.default.flagWidth, containerHeight = _settings__WEBPACK_IMPORTED_MODULE_0__.default.flagHeight, gapPercentage = this.gapPercentage) {\n        let singleGapHeight,\n            singleGapPercentage,\n            totalGapPercent,\n            numGaps,\n            singlePaleHeightPercentage,\n            singlePaleHeight,\n            remainingContainerHeight;\n\n        // If we're only generating one Pale, let's center it.\n        if (this.count === 1) {\n            gapPercentage = 33;\n        }\n\n        // What percentage of the whole WIDTH should each pale take up?\n        singlePaleHeightPercentage = ((100 / this.count)) / 100;\n        // Given the current count of pales, how many gaps are there? One on each side and N gaps between.\n        numGaps = (this.count * 2) - (this.count - 1); // I don't remember how I arrived at this, but it seems correct.\n        // Turn our whole number gapPercentage into a decimal for math.\n        singleGapPercentage = gapPercentage / 100; // Divide the whole number value by 100 to get a decimal.\n        // Get the total % of the container width taken up by gaps.\n        totalGapPercent = singleGapPercentage * numGaps; // Multiply the decimal from above by the number of gaps to get a total % value of the whole. Useful for later.\n        // How wide is a single gap?\n        singleGapHeight = (containerHeight * singleGapPercentage);\n        // How much of the flag is left for pales after we draw gaps?\n        remainingContainerHeight = containerHeight - (totalGapPercent * containerHeight);\n        // Calculate the width of a single pale by multiplying the fess width percentage by the remaining flag width.\n        singlePaleHeight = (singlePaleHeightPercentage * remainingContainerHeight);\n\n        // Figure out x/y coordinates for each pale\n        let incrementYpos = singleGapHeight;\n        for (let i = 0; i < this.count; i++) {\n            // ctx.fillStyle = randomHex(settings.seed, i + 2); // @TODO: Handle color more elegantly, I'd like the colors to be complimentary.\n            // ctx.fillStyle = this.generateColor(settings.seed, (i + .527)); // @TODO: Handle color more elegantly, I'd like the colors to be complimentary.\n            switch (this.count) {\n                case 1:\n                    ctx.fillStyle = this.color.color;\n                    break;\n                case 2:\n                    ctx.fillStyle = i === 0 ? this.color.color : this.color.complement;\n                    break;\n                case 3:\n                    ctx.fillStyle = this.color.triad[i];\n                    break;\n                case 4:\n                    ctx.fillStyle = this.color.tetrad[i]\n                    break;\n                default:\n                    ctx.fillStyle = this.color.monochromatic[i];\n                    break;\n            }\n            let ypos = incrementYpos; // start at the top always\n            let xpos = 0;\n            let w = containerWidth;\n            let h = singlePaleHeight;\n            incrementYpos = incrementYpos + singlePaleHeight + singleGapHeight;\n            ctx.fillRect(xpos, ypos, w, h);\n        }\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/divisions/Pall.js\":\n/*!*******************************!*\\\n  !*** ./src/divisions/Pall.js ***!\n  \\*******************************/\n/*! namespace exports */\n/*! export default [provided] [no usage info] [missing usage info prevents renaming] */\n/*! other exports [not provided] [no usage info] */\n/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Pall\n/* harmony export */ });\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utilities */ \"./src/utilities.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../settings */ \"./src/settings.js\");\n/* harmony import */ var _division__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../division */ \"./src/division.js\");\n/**\n * @file Houses the class properties and methods for the Pall division.\n */\n\n\n\n\n/** Pall pattern.\n *\n * @class\n * @classdesc The Pall pattern describes a Y shape on the field, typically oriented so the top of the Y is on the left of the field.\n * @augments Division\n * @namespace Divisions.Pall\n */\nclass Pall extends _division__WEBPACK_IMPORTED_MODULE_2__.default {\n    /**\n     * Creates a Pall.\n     *\n     * @example\n     * // Creates a horizontally oriented, white Pall with a black border.\n     * const pall = new Pall('fesswise', '#ffffff', true, 20, '#000000');\n     * @param {string} direction - The orientation of the Pall. One of: fesswise, palewise, fesswiseReversed, palewiseReverse.\n     * @param {string} color - A hexadecimal color string.\n     * @param {number} width - A width value for drawing the division.\n     * @param {boolean} border - Whether or not to draw a border around the Pall.\n     * @param {number} borderWidth - The width of the border.\n     * @param {string} borderColor - A hexadecimal color string.\n     */\n  constructor(params = {seed, direction, color, width, border, borderWidth, borderColor}) {\n    super({seed: params.seed, count: 1, limit: 1, color: params.color});\n    this.border = params.border;\n    this.width = params.width;\n    this.direction = typeof params.direction !== 'undefined' ? params.direction : this.generateDirection();\n    // this.borderWidth = borderWidth > 0 ? borderWidth : this.generateSaltireWidth((settings.seed * .1234));\n    this.borderWidth = params.borderWidth || 50;\n    this.borderColor = params.borderColor || _utilities__WEBPACK_IMPORTED_MODULE_0__.generateColor(undefined, .12345);\n  }\n    /**\n     * Generate a direction value for the Pall.\n     *\n     * @example\n     * // Returns 'palewiseReversed'\n     * const newPale = new Pale();\n     * newPale.generateDirection(.1337)\n     * @param {number} seed - The seed number used for generated values.\n     * @returns {string} - One of: 'pallwise', 'fesswise', 'pallwiseReversed', 'fesswiseReversed'.\n     */\n    generateDirection(seed = this.seed) {\n        let generated;\n        // let seedDigit = +(Math.round(this.seed * this.seedMultiplier).toString().substr(-1));\n        const seedDigit = _utilities__WEBPACK_IMPORTED_MODULE_0__.getLastDigit(_utilities__WEBPACK_IMPORTED_MODULE_0__.modifySeed(this.seed, this.seedMultiplier));\n        if (seedDigit >=1 && seedDigit <= 4) {\n            generated = 'palewise';\n        } else if (seedDigit === 5 || seedDigit === 6) {\n            generated = 'fesswise';\n        } else if (seedDigit === 7 || seedDigit === 8) {\n            generated = 'palewiseReversed';\n        } else if (seedDigit === 0 || seedDigit === 9) {\n            generated = 'fesswiseReversed';\n        }\n        return generated;\n    }\n\n    /**\n     * Returns the proper draw function instructions for a given direction.\n     *\n     * @example\n     * // Returns drawInstructionsPalewise();\n     * const pall = new Pall();\n     * pall.drawInstructions('palewise');\n     * @param {string} direction - One of: 'fesswise', 'palewise', 'fesswiseReversed', 'palewiseReversed'.\n     * @returns {Function} The draw instruction function corresponding to the direction.\n     */\n    drawInstructions(direction) {\n        let instructions;\n        switch (direction) {\n            case 'palewise':\n                instructions = this.drawInstructionsPalewise();\n                break;\n            case 'palewiseReversed':\n                instructions = this.drawInstructionsPalewise(true);\n                break;\n            case 'fesswise':\n                instructions = this.drawInstructionsFesswise();\n                break;\n            case 'fesswiseReversed':\n                instructions = this.drawInstructionsFesswise(true);\n                break;\n        }\n        return instructions;\n    }\n\n    /**\n     * Generates the draw instructions for the palewise and palewiseReversed directions.\n     *\n     * @example\n     * // Returns an instruction set for the palewise direction based on the flag dimensions.\n     * // [\n     * //     {moveTo: [x, y]},\n     * //     {lineTo: [x, y]},\n     * //     {lineTo: [x, y]},\n     * //     {moveTo: [x, y]},\n     * //     {lineTo: [x, y]},\n     * // ]\n     * const pall = new Pall();\n     * const instructions = pall.drawInstructionsPalewise();\n     * @param {boolean} reversed - Whether or not to return the reverse draw instructions.\n     * @returns {Array} An array of objects containing canvas drawing instructions.\n     */\n    drawInstructionsPalewise(reversed) {\n        let instructions;\n        if (!reversed) {\n            instructions = [\n                {moveTo: [0, 0]},\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight / 2]},\n                {lineTo: [0, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight]},\n                {moveTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight / 2]},\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight / 2]},\n            ]\n        } else {\n            instructions = [\n                {moveTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth, 0]}, // start top-right\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight / 2]}, // draw to center\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight]}, // draw to bottom right\n                {moveTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight / 2]}, // move to center\n                {lineTo: [0, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight / 2]}, // Draw to center left side\n            ]\n        }\n\n        return instructions;\n    }\n    /**\n     * Generates the draw instructions for the fesswise and fesswiseReversed directions.\n     *\n     * @example\n     * // Returns an instruction set for the fesswise direction based on the flag dimensions.\n     * // [\n     * //     {moveTo: [x, y]},\n     * //     {lineTo: [x, y]},\n     * //     {lineTo: [x, y]},\n     * //     {moveTo: [x, y]},\n     * //     {lineTo: [x, y]},\n     * // ]\n     * const pall = new Pall();\n     * const instructions = pall.drawInstructionsFesswise();\n     * @param {boolean} reversed - Whether or not to return the reverse draw instructions.\n     * @returns {Array} An array of objects containing canvas drawing instructions.\n     */\n    drawInstructionsFesswise(reversed) {\n        let instructions;\n        if (!reversed) {\n            instructions = [\n                {moveTo: [0, 0]}, // start top left\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight / 2]}, // draw to center\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth, 0]}, // draw to top right\n                {moveTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight / 2]}, // move to center\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight]}, // draw to center bottom\n            ];\n        } else {\n            instructions = [\n                {moveTo: [0, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight]}, // start bottom left\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight / 2]}, // draw to center\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight]}, // draw to bottom right\n                {moveTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight / 2]}, // move to center\n                {lineTo: [_settings__WEBPACK_IMPORTED_MODULE_1__.default.flagWidth / 2, _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight - _settings__WEBPACK_IMPORTED_MODULE_1__.default.flagHeight]}, // draw to center top\n            ];\n        }\n        return instructions;\n    }\n\n    /**\n     * Draws the Pall pattern on a canvas.\n     *\n     * @example\n     * // Draws the Pall pattern.\n     * pall.draw(ctx);\n     * @param {object} ctx - An object containing a canvas context.\n     */\n    draw(ctx) {\n        const drawSteps = this.drawInstructions(this.direction);\n        const pallWidth = this.width || Math.round(this.seed * 100);\n        ctx.beginPath();\n        // If there's a border, draw it first with a larger width.\n        if (this.border) {\n            for (let i = 0, len = drawSteps.length; i < len; i++) {\n                const step = Object.keys(drawSteps[i]);\n                const stepParams = Object.values(drawSteps[i])[0];\n                ctx[step](...stepParams);\n            }\n            ctx.lineWidth = pallWidth + this.borderWidth;\n            ctx.strokeStyle = this.color.complement;\n            ctx.stroke();\n        }\n\n        for (let i = 0, len = drawSteps.length; i < len; i++) {\n            const step = Object.keys(drawSteps[i]);\n            const stepParams = Object.values(drawSteps[i])[0];\n            ctx[step](...stepParams);\n        }\n        ctx.strokeStyle = this.color.color;\n        ctx.lineWidth = pallWidth;\n        ctx.stroke();\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/divisions/Saltire.js\":\n/*!**********************************!*\\\n  !*** ./src/divisions/Saltire.js ***!\n  \\**********************************/\n/*! namespace exports */\n/*! export default [provided] [no usage info] [missing usage info prevents renaming] */\n/*! other exports [not provided] [no usage info] */\n/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../settings */ \"./src/settings.js\");\n/* harmony import */ var _division__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../division */ \"./src/division.js\");\n/**\n * @file Houses the class properties and methods for the Saltire division.\n */\n\n\n\n/** Saltire pattern.\n *\n * @class\n * @classdesc The Saltire pattern describes two diagonal lines crossing in the center of the field. An X pattern.\n * @augments Division\n */\nclass Saltire extends _division__WEBPACK_IMPORTED_MODULE_1__.default {\n    /**\n     * Creates a Saltire.\n     *\n     * @example\n     * // Instantiates a Saltire without a border.\n     * const saltire = new Saltire();\n     * // Instantiates a Saltire with a border.\n     * const saltireWithBorder = new Saltire(true);\n     * @param {number} count - The number of Saltires in this instance. Should typically only be one.\n     * @param {boolean} border - A boolean value to decide whether or not to draw a border based on the global seed setting.\n     * @param {number} borderWidth - A number value to use when generating border width. This number is used in addition\n     * to the randomly generated border width determined by the seed.\n     * @param {string} color - A hexadecimal color string.\n     * @param {string} borderColor - A hexadecimal color string.\n     */\n  constructor(params = {seed, count, border: false, borderWidth: 0, color, borderColor}) {\n    const limit = 1;\n    super({seed: params.seed, count: params.count, limit, color: params.color});\n    this.border = params.border;\n    this.borderWidth = params.borderWidth > 0 ? params.borderWidth : this.generateSaltireWidth((this.seed * .1234));\n    // this.borderColor = borderColor || this.generateColor(undefined, .12345);\n  }\n    /**\n     * Generates a percentage width for the Saltire lines based on the seed.\n     *\n     * @example\n     * // Returns 81, meaning 81%\n     * saltire.generateWidth(0.8112494706388412);\n     * @param {number} seed - A pseudo-random string generated based on a string value.\n     * @see {@link module:flag-generator/utilities~generateSeed|generateSeed()} for more info about the seed.\n     * @returns {number} A whole number used elsewhere as a percentage value.\n     */\n    generateSaltireWidth(seed = this.seed) {\n        return Math.round(seed * 100);\n    }\n    /**\n     * Generate border information for the Saltire.\n     *\n     * @example\n     * // Returns an object with width and color keys.\n     * const border = this.generateSaltireBorder(.123747918512398745);\n     * @param {number} seed - A pseudo-random string generated based on a string value.\n     * @see {@link module:flag-generator/utilities~generateSeed|generateSeed()} for more info about the seed.\n     * @returns {object} An object containing width and color keys.\n     */\n    generateSaltireBorder(seed = this.seed) {\n        // let borderWidth = this.borderWidth;\n        let borderInfo = {};\n\n        // borderInfo.width = borderWidth + this.generateSaltireWidth((seed * .1234));\n        borderInfo.width = this.borderWidth;\n\n        return borderInfo;\n    }\n    /**\n     * Draws the Saltire on the given canvas.\n     *\n     * @example\n     * // Draws a Saltire on the canvas.\n     * const saltire = new Saltire();\n     * saltire.drawSaltire(ctx);\n     * @param {object} ctx - A canvas Context.\n     */\n    draw(ctx) {\n        const saltireWidth = this.generateSaltireWidth();\n\n        // Handle any borders first. We draw the borders as a background.\n        if (this.border) {\n            const border = this.generateSaltireBorder();\n            ctx.beginPath();\n            ctx.moveTo(0, 0); // Move to top left corner. Start here.\n            ctx.lineTo(_settings__WEBPACK_IMPORTED_MODULE_0__.default.flagWidth, _settings__WEBPACK_IMPORTED_MODULE_0__.default.flagHeight);\n\n            ctx.moveTo(0, _settings__WEBPACK_IMPORTED_MODULE_0__.default.flagHeight);\n            ctx.lineTo(_settings__WEBPACK_IMPORTED_MODULE_0__.default.flagWidth, 0);\n\n            ctx.strokeStyle = this.color.complement;\n            ctx.lineWidth = saltireWidth + (border.width * 2);\n            ctx.stroke();\n        }\n\n        // Now draw the main Saltire.\n        ctx.beginPath();\n\n        // First line of the X\n        ctx.moveTo(0, 0); // Move to top left corner. Start here.\n        ctx.lineTo(_settings__WEBPACK_IMPORTED_MODULE_0__.default.flagWidth, _settings__WEBPACK_IMPORTED_MODULE_0__.default.flagHeight);\n\n        // Second line of the X\n        ctx.moveTo(0, _settings__WEBPACK_IMPORTED_MODULE_0__.default.flagHeight);\n        ctx.lineTo(_settings__WEBPACK_IMPORTED_MODULE_0__.default.flagWidth, 0);\n\n        // Stroke it.\n        ctx.strokeStyle = this.color.color;\n        ctx.lineWidth = saltireWidth;\n        ctx.stroke();\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Saltire);\n\n\n/***/ }),\n\n/***/ \"./src/index.js\":\n/*!**********************!*\\\n  !*** ./src/index.js ***!\n  \\**********************/\n/*! namespace exports */\n/*! export default [provided] [maybe used in main (runtime-defined)] [usage prevents renaming] */\n/*! other exports [not provided] [maybe used in main (runtime-defined)] */\n/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utilities */ \"./src/utilities.js\");\n/* harmony import */ var _divisions_Bend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./divisions/Bend */ \"./src/divisions/Bend.js\");\n/* harmony import */ var _divisions_Border__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./divisions/Border */ \"./src/divisions/Border.js\");\n/* harmony import */ var _divisions_Canton__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./divisions/Canton */ \"./src/divisions/Canton.js\");\n/* harmony import */ var _divisions_Chevron__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./divisions/Chevron */ \"./src/divisions/Chevron.js\");\n/* harmony import */ var _divisions_Cross__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./divisions/Cross */ \"./src/divisions/Cross.js\");\n/* harmony import */ var _divisions_Fesses__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./divisions/Fesses */ \"./src/divisions/Fesses.js\");\n/* harmony import */ var _divisions_Fusil__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./divisions/Fusil */ \"./src/divisions/Fusil.js\");\n/* harmony import */ var _divisions_Lozenge__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./divisions/Lozenge */ \"./src/divisions/Lozenge.js\");\n/* harmony import */ var _divisions_Pales__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./divisions/Pales */ \"./src/divisions/Pales.js\");\n/* harmony import */ var _divisions_Pall__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./divisions/Pall */ \"./src/divisions/Pall.js\");\n/* harmony import */ var _divisions_Saltire__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./divisions/Saltire */ \"./src/divisions/Saltire.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./settings */ \"./src/settings.js\");\n/**\n * @file Flag generator base.\n */\n/**\n * Flag module.\n *\n * @module flag-generator\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Ideas:\n//   - Take the flag width and height and divide it into 9 parts (rule of 3rds).\n//     Process each of the 9 parts individually for color\n//     After that use the 4 intersections to add more complexity.\n//\n//     Expanding on this idea, we should be able to apply patterns if we want to the Divisions themselves, looking to\n//     heraldry designs for inspiration:\n//      * Paly bendy\n//      * Lozengy  - diamonds in a pattern\n//\n\n// Prototypes / Classes\n// --------------------------------------------------------------------------------------------------------------\n/** Class representing a differently envisioned Flag. */\nclass Flag {\n\n  constructor(params = {id, aspectRatio, divisionCount, divisions, seed, color}) {\n    this.seed = params.seed ? params.seed : _utilities__WEBPACK_IMPORTED_MODULE_0__.generateSeed();\n    this.color = _utilities__WEBPACK_IMPORTED_MODULE_0__.generateColor(params.color, undefined, this.seed);\n    this.aspect = params.aspectRatio ? _utilities__WEBPACK_IMPORTED_MODULE_0__.processAspectRatioString(params.aspectRatio) : _utilities__WEBPACK_IMPORTED_MODULE_0__.processAspectRatioString(this.generatePseudoRandomRatio());\n    this.dimensions = _utilities__WEBPACK_IMPORTED_MODULE_0__.setDimensionsFromAspectObject(this.aspect);\n    this.totalArea = this.dimensions.h * this.dimensions.w;\n    this.divisionCount = params.divisionCount ? params.divisionCount : _utilities__WEBPACK_IMPORTED_MODULE_0__.generateCount(undefined, .4689, this.seed);\n    this.divisions = this.generateDivisions(this.divisionCount);\n    this.parentID = params.id;\n    // this.drawFlag() = this.drawFlag();\n    _settings__WEBPACK_IMPORTED_MODULE_12__.default.flagHeight = this.dimensions.h;\n    _settings__WEBPACK_IMPORTED_MODULE_12__.default.flagWidth = this.dimensions.w;\n    // settings.seed = this.seed;\n\n    // this.generatePseudoRandomRatio(1, 6);\n    console.log('flag constructor params', params);\n    console.log('flag generated color', this.color.color);\n\n\n  }\n\n  /**\n   * Generate a random aspect ratio string of the style '3:5'\n   *\n   * This function takes the limit value and generates a fibonacci sequence of\n   * aspect ratios up to that limit, then shuffles the ratios, and chooses\n   * one based on the seed.\n   * @example\n   * // Returns 3:5\n   * const newFlag = new Flag({id: 'test', seed: 0.3994258342288038});\n   * newFlag.generatePseudoRandomRatio();\n   * @param {number} limit - The maximum number of ratio strings to generate.\n   * @returns {string} An aspect ratio string.\n   */\n  generatePseudoRandomRatio(limit) {\n    const genLimit = _utilities__WEBPACK_IMPORTED_MODULE_0__.getLastDigit(this.seed);\n    const numSequence = limit || genLimit > 5 ? 5 : genLimit;\n    const arr = [[1, 1], [1, 2]];\n\n    for (let i = 1; i < numSequence; i++) {\n      const opGroup = arr[i];\n      const prevGroup = arr[i - 1];\n\n      let x = opGroup[0] + prevGroup[0];\n      let y = opGroup[1] + prevGroup[1];\n\n      arr[i + 1] = [x, y];\n    }\n\n    const shuffledArr = _utilities__WEBPACK_IMPORTED_MODULE_0__.pseudoShuffle(arr);\n    const choiceDigit = _utilities__WEBPACK_IMPORTED_MODULE_0__.getLastDigit(numSequence);\n\n    console.log('arr', shuffledArr);\n    return `${shuffledArr[choiceDigit][0]}:${shuffledArr[choiceDigit][1]}`;\n  }\n\n  generateDivisions(count) {\n    const basicOptions = {\n      seed: this.seed,\n    }\n    let divisions = [];\n    const divisionsOptions = [\n      new _divisions_Pales__WEBPACK_IMPORTED_MODULE_9__.default(basicOptions),\n      new _divisions_Cross__WEBPACK_IMPORTED_MODULE_5__.default(basicOptions),\n      new _divisions_Fusil__WEBPACK_IMPORTED_MODULE_7__.default(basicOptions),\n      new _divisions_Border__WEBPACK_IMPORTED_MODULE_2__.default(basicOptions),\n      new _divisions_Lozenge__WEBPACK_IMPORTED_MODULE_8__.default(basicOptions),\n      new _divisions_Fesses__WEBPACK_IMPORTED_MODULE_6__.default(basicOptions),\n      new _divisions_Saltire__WEBPACK_IMPORTED_MODULE_11__.default(basicOptions),\n      new _divisions_Pall__WEBPACK_IMPORTED_MODULE_10__.default(basicOptions),\n      new _divisions_Chevron__WEBPACK_IMPORTED_MODULE_4__.default(basicOptions),\n      new _divisions_Bend__WEBPACK_IMPORTED_MODULE_1__.default(basicOptions),\n    ];\n\n    const shuffled = _utilities__WEBPACK_IMPORTED_MODULE_0__.pseudoShuffle(divisionsOptions, this.seed);\n\n    // Randomly choose a number of divisions from the array:\n    for (let i = 0, len = count; i < count; i++) {\n      divisions.push(shuffled[i]);\n    }\n    return divisions;\n  }\n\n  drawFlag() {\n    const dimensions = this.dimensions;\n    const divisions = this.divisions;\n    const primaryColor = this.color.color;\n    const seed = this.seed;\n    const parentID = this.parentID !== 'undefined' ? this.parentID : 'root';\n    const canvasID = 'flag_' + (Math.round(seed * 100));\n    _utilities__WEBPACK_IMPORTED_MODULE_0__.generateCanvas(document, parentID, canvasID, dimensions);\n    const canvas = document.getElementById(canvasID);\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = primaryColor;\n    ctx.fillRect(0, 0, dimensions.w, dimensions.h);\n    for (let i = 0; i < divisions.length; i++) {\n      // Drawing pales.\n      divisions[i].draw(ctx);\n    }\n  }\n\n  destroyFlag(seed) {\n    const canvas = document.getElementById('flag_' + (Math.round(seed * 100)));\n    canvas.remove();\n  }\n\n}\n\n// Flag testing area\n// ----------------------------------------------------------------------------------------------------------------\n\nconst flagGenerator = (params = {id: 'root', seed: undefined, subFlag: undefined}) => {\n  console.log('Running the Flag Generator...');\n  console.log('Seed received by flagGenerator(): ', params.seed);\n  // Placeholders:\n  let divisions = [];\n  const seed = typeof params.seed !== 'undefined' ? params.seed : _utilities__WEBPACK_IMPORTED_MODULE_0__.generateSeed();\n\n  // Generate our flag's base color:\n  const seededColor = _utilities__WEBPACK_IMPORTED_MODULE_0__.randomHex(seed);\n  // console.log('Seeded color: ', seededColor);\n\n  // If we have no seed, go get one:\n  // seed = typeof seed != 'undefined' ? seed : generateSeed();\n  // seed = params.seed ? params.seed : typeof params.seed !== 'undefined' ? params.seed : Utilities.generateSeed();\n\n\n\n  // Decide if there should be any divisions:\n  // We'll use the seed to generate a binary value to decide whether or not we want any divisions at all.\n  // const divisionChoice = Math.round(seed);\n  // console.log('Do we want any division(s)? ', divisionChoice ? 'yes' : 'no');\n\n  console.log('got an ID from caller: ', params.id);\n  const newFlag = new Flag(params.id, '3:5');\n\n  return newFlag;\n\n};\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({settings: _settings__WEBPACK_IMPORTED_MODULE_12__.default, Utilities: _utilities__WEBPACK_IMPORTED_MODULE_0__, Flag, flagGenerator});\n\n\n/***/ }),\n\n/***/ \"./src/settings.js\":\n/*!*************************!*\\\n  !*** ./src/settings.js ***!\n  \\*************************/\n/*! namespace exports */\n/*! export default [provided] [no usage info] [missing usage info prevents renaming] */\n/*! other exports [not provided] [no usage info] */\n/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/**\n * @file\n * Houses project settings.\n */\n/**\n * The project settings for the current run of the Flag generator.\n *\n * @type {{flagHeight: number, seed: boolean, flagWidth: number}}\n */\nlet settings = {\n  seed: false,\n  flagWidth: undefined,\n  flagHeight: undefined,\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (settings);\n\n// Complimentary Divisions\n// - a Border and a Pall look pretty good together.\n\n\n/***/ }),\n\n/***/ \"./src/utilities.js\":\n/*!**************************!*\\\n  !*** ./src/utilities.js ***!\n  \\**************************/\n/*! namespace exports */\n/*! export convertHex [provided] [no usage info] [missing usage info prevents renaming] */\n/*! export findGreaterNumber [provided] [no usage info] [missing usage info prevents renaming] */\n/*! export generateCanvas [provided] [no usage info] [missing usage info prevents renaming] */\n/*! export generateColor [provided] [no usage info] [missing usage info prevents renaming] */\n/*! export generateCount [provided] [no usage info] [missing usage info prevents renaming] */\n/*! export generateSeed [provided] [no usage info] [missing usage info prevents renaming] */\n/*! export generateSeedMultiplier [provided] [no usage info] [missing usage info prevents renaming] */\n/*! export getLastDigit [provided] [no usage info] [missing usage info prevents renaming] */\n/*! export hexToRgb [provided] [no usage info] [missing usage info prevents renaming] */\n/*! export modifySeed [provided] [no usage info] [missing usage info prevents renaming] */\n/*! export processAspectRatioString [provided] [no usage info] [missing usage info prevents renaming] */\n/*! export pseudoShuffle [provided] [no usage info] [missing usage info prevents renaming] */\n/*! export randomHex [provided] [no usage info] [missing usage info prevents renaming] */\n/*! export setDimensionsFromAspectObject [provided] [no usage info] [missing usage info prevents renaming] */\n/*! other exports [not provided] [no usage info] */\n/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateSeed\": () => /* binding */ generateSeed,\n/* harmony export */   \"generateSeedMultiplier\": () => /* binding */ generateSeedMultiplier,\n/* harmony export */   \"modifySeed\": () => /* binding */ modifySeed,\n/* harmony export */   \"getLastDigit\": () => /* binding */ getLastDigit,\n/* harmony export */   \"randomHex\": () => /* binding */ randomHex,\n/* harmony export */   \"hexToRgb\": () => /* binding */ hexToRgb,\n/* harmony export */   \"convertHex\": () => /* binding */ convertHex,\n/* harmony export */   \"generateColor\": () => /* binding */ generateColor,\n/* harmony export */   \"pseudoShuffle\": () => /* binding */ pseudoShuffle,\n/* harmony export */   \"processAspectRatioString\": () => /* binding */ processAspectRatioString,\n/* harmony export */   \"setDimensionsFromAspectObject\": () => /* binding */ setDimensionsFromAspectObject,\n/* harmony export */   \"generateCanvas\": () => /* binding */ generateCanvas,\n/* harmony export */   \"generateCount\": () => /* binding */ generateCount,\n/* harmony export */   \"findGreaterNumber\": () => /* binding */ findGreaterNumber\n/* harmony export */ });\n/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! seedrandom */ \"./node_modules/seedrandom/index.js\");\n/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(seedrandom__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settings */ \"./src/settings.js\");\n/* harmony import */ var tinycolor2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tinycolor2 */ \"./node_modules/tinycolor2/tinycolor.js\");\n/* harmony import */ var tinycolor2__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(tinycolor2__WEBPACK_IMPORTED_MODULE_2__);\n/**\n * @file Utilities for flag generation.\n */\n\n\n\n\n\n/**\n * Utilities for flag generation.\n *\n * @module flag-generator/utilities\n */\n\n/**\n * Generate the seed from a seed string.\n *\n * @function\n * @example\n * // Returns 0.8112494706388412\n * generateSeed('test');\n * @param {string} seedString - A string on which to run the prng function.\n */\nconst generateSeed = (seedString) => {\n  const seed = typeof seedString !== 'undefined' ? seedrandom__WEBPACK_IMPORTED_MODULE_0___default()(seedString, {state: true}) : seedrandom__WEBPACK_IMPORTED_MODULE_0___default()(Math.floor(Math.random() * 1e9).toString(), {state: true});\n\n  // settings.seed = seed();\n  return seed();\n}\n/**\n * Generates a seed multiplier converting the characters of the provided string to numbers name.\n *\n * @function\n * @example\n * // Returns 0.5363260631705106\n * generateSeedMultiplier('Border');\n * @param {string} str - A string value to turn into charcodes.\n * @returns {number} A multiplier to be used with seed multiplication based decision making.\n * @todo I've read somewhere that parseFloat is dangerous without radx, I should figure out if that's true.\n * @todo: handle the case where settings.seed may not be set.\n */\nconst generateSeedMultiplier = (seed, str) => {\n  // Make sure the string is a string.\n  str = str.toString();\n  // Add each character to an array.\n  let multiplier = '';\n  const strArray = str.toString().split('');\n  // Loop over the array of characters, turn them into a number, and add them to a string.\n  // I could probably do this more simply with array.map() or reduce() somehow.\n  for (let i = 0; i < strArray.length; i++) {\n      multiplier = multiplier + strArray[i].charCodeAt(0);\n  }\n  // Turn our multiplier string into an actual number.\n  multiplier = parseFloat('.' + multiplier * seed);\n  return multiplier;\n}\n\n/**\n * Modify a seed by multiplying it by a value.\n *\n * @function\n * @example\n * // Returns 0.05483563\n * modifySeed(0.2602354456965794, 0.2107154537);\n * @param {number} seed - The seed number on which generation depends.\n * @param {number} seedMultiplier - The multiplier used to alter the seed to generate values.\n * @returns {number} - The product of seed and seedMultiplier.\n */\n// export const modifySeed = (seed, seedMultiplier) => seed * seedMultiplier\nconst modifySeed = (seed, seedMultiplier) => {\n  // console.log('seed to mod', seed);\n  // console.log('multi', seedMultiplier);\n  return seed * seedMultiplier\n}\n\n\n/**\n * Gets the last digit from a number.\n *\n * @function\n * @example\n * // Returns 7\n * getLastDigit(.2357);\n * @param {number} n - A number.\n * @returns {number} The last digit of n.\n */\nconst getLastDigit = (n) => +(n.toString().substr(-1));\n\n\n/**\n * Generate a random hex color based on the seed.\n *\n * @function\n * @example\n * // returns #2b32ad\n * randomHex(0.8112494706388412);\n * @param {number} seed - The prng generated seed value under 1.\n * @param {number} seedModifier - A number used to perform modifications to the seed.\n * @returns {string} The pseudo-randomly generated hexadecimal color value.\n */\nconst randomHex = (seed, seedModifier) => {\n    return '#'+((modifySeed(seed, seedModifier) % 1) * 0xFFFFFF << 0).toString(16).padStart(6, '0');\n};\n\n/**\n * Turn a hexadecimal color string into an rgb() object.\n *\n * @function\n * @example\n * // returns {r: 255, g: 255, b: 255}\n * hexToRgb('#ffffff');\n * @param {string} hex - A hexadecimal color string.\n * @returns {{r: number, b: number, g: number}} - An object containing RGB keys.\n */\nfunction hexToRgb(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n    } : null;\n}\n\n/**\n * Convert a hexadecimal color string to an rgb() string.\n *\n * @function\n * @example\n * // Returns rgb(255, 255, 255)\n * convertHex('#ffffff');\n * @param {string} hex - A hexadecimal color string.\n * @returns {string} - An RGB color string.\n */\nconst convertHex = (hex) => {\n    const rgbObject = hexToRgb(hex);\n    return 'rgb(' + rgbObject.r + ', ' + rgbObject.g + ', ' + rgbObject.b + ')';\n}\n/**\n * A color object.\n *\n * @typedef {object} ColorObject\n * @property {object} analogous - An object containing 6 hexadecimal color strings analogous to the originally generated color.\n * @property {string} color - A hexadecimal color value generated from the seed and a seedMultiplier.\n * @property {string} complement - A complement hexadecimal color value to the color string.\n * @property {object} monochromatic - An object containing 6 hexadecimal color strings describing the monochrome range of the original generated color.\n * @property {object} splitComplement - An object containing the originally generated color and two hexadecimal color string complements.\n * @property {object} tetrad - An object containing the originally generated color's tetrad.\n * @property {object} triad - An object containing the originally generated color's triad.\n */\n/**\n * Generates a color object from a modified seed using the tinycolor2 library.\n *\n * @function\n * @example\n * // Generates a ColorObject with a primary color key of #575109;\n * const colorObject = generateColor(80857473, 0.06556305047688744);\n * @param {number} seedMultiplier - The multiplier used to alter the seed to generate values.\n * @param {number} seed - The seed number on which generation depends.\n * @returns {...ColorObject} A {@link module:flag-generator/utilities~ColorObject}.\n */\nconst generateColor = (hex, seedMultiplier = 80857473, seed) => {\n    let generated = randomHex(seed, seedMultiplier);\n    if (/^#/.test(hex)) {\n      generated = hex;\n    }\n    const color = {\n        color: tinycolor2__WEBPACK_IMPORTED_MODULE_2___default()(generated).toHexString(),\n        complement: tinycolor2__WEBPACK_IMPORTED_MODULE_2___default()(generated).complement().toHexString(),\n        splitComplement: tinycolor2__WEBPACK_IMPORTED_MODULE_2___default()(generated).splitcomplement().map((sc) => sc.toHexString()),\n        triad: tinycolor2__WEBPACK_IMPORTED_MODULE_2___default()(generated).triad().map((tr) => tr.toHexString()),\n        tetrad: tinycolor2__WEBPACK_IMPORTED_MODULE_2___default()(generated).tetrad().map((te) => te.toHexString()),\n        analogous: tinycolor2__WEBPACK_IMPORTED_MODULE_2___default()(generated).analogous().map((an) => an.toHexString()),\n        monochromatic: tinycolor2__WEBPACK_IMPORTED_MODULE_2___default()(generated).monochromatic().map((mo) => mo.toHexString()),\n    }\n    return color;\n}\n\n/**\n * Shuffles an array predictably using the Fisher Yates shuffle algorithm.\n *\n * @function\n * @example\n * // Returns [1, 2, 3, 5, 4]\n * const originalArray = [1, 2, 3, 4, 5]\n * const shuffledArray = pseudoShuffle(originalArray, 0.7243609520746538);\n * @param {Array} arr - The array to be shuffled.\n * @param {number} seed - The pseudorandom string used to predictabbly apply the algorithm.\n * @returns {Array} The arr parameter, but shuffled.\n */\nconst pseudoShuffle = (arr, seed) => {\n    let m = arr.length;\n    let t, i\n\n    while (m) {\n        i = Math.floor(seed * m--)\n        t = arr[m]\n        arr[m] = arr[i]\n        arr[i] = t\n    }\n    return arr;\n};\n/**\n * Takes an aspect ratio string, e.g.: 1:2, 2:3, 3:5, and returns an object with height (h) and width (w) keys.\n *\n * @function\n * @example\n * // Returns\n * // {\n * //     h: 3,\n * //     w: 5,\n * // }\n * const aspectObject = processAspectRatioString('3:5');\n * @param {string} aspect - A string describing a ratio.\n * @returns {object} An aspect ratio object containing height (h) and width (w) keys from the aspect ratio string.\n * @todo This function could be shortened significantly with a map callback.\n */\nconst processAspectRatioString = (aspect) => {\n  aspect = aspect.toString().split(':');\n  let aspectObj = {};\n  for (let i = 0; i < aspect.length; i++) {\n    switch(i) {\n      case 0:\n        aspectObj.h = +(aspect[i]);\n        break;\n      case 1:\n        aspectObj.w = +(aspect[i]);\n        break;\n      default:\n        throw new Error('Could not process given aspect ratio string.');\n      }\n  }\n  return aspectObj;\n}\n\n/**\n * Turn an aspect object into more realistic dimensions.\n *\n * @function\n * @example\n * // Returns\n * // {\n * //   h: 300,\n * //   w: 500,\n * // }\n * const dimensions = setDimensionsFromAspectObject({h: 3, w: 5});\n * @param {object} aspect - An aspect object.\n * @param {number} multiplier - A number to multiply the aspect keys by. Defaults to 100.\n * @returns {object} An object containing height (h) and width (w) keys representing dimensions.\n */\nconst setDimensionsFromAspectObject = (aspect, multiplier = 100) => ({\n  h: aspect.h * multiplier,\n  w: aspect.w * multiplier\n});\n\n/**\n * Creates a canvas element and append it to the document body.\n *\n * @function\n * @example\n * // Creates and appends the canvas with an id of 'myCanvas'.\n * generateCanvas(document, 'myCanvas');\n * @param {object} document - A document object.\n * @param {string} id - The Id to give the created canvas element.\n * @param {object} dimensions - An object containing height(h) and width (w) keys.\n */\nconst generateCanvas = (document, parentID, canvasID, dimensions) => {\n  const parent = document.getElementById(parentID);\n  const canvas = document.createElement('canvas');\n  canvas.setAttribute('id', canvasID);\n  canvas.setAttribute('style', 'border: 1px solid black;');\n  canvas.setAttribute('width', dimensions.w);\n  canvas.setAttribute('height', dimensions.h);\n  parent.appendChild(canvas);\n}\n/**\n * Generates a number used for decision making based on the seed and a given multiplier.\n *\n * @function\n * @example\n * // Returns 1\n * generateCount(5, 0.8112494706388412, 0.6568774660735);\n * @param {number} limit - The maximum value of the count to be returned. Values above 9 are ignored.\n * @param {number} seedMultiplier - The multiplier used to alter the seed to generate values.\n * @param {number} seed - The seed number on which generation depends.\n * @returns {number} A single digit number between 0 and 9.\n */\nconst generateCount = (limit, seedMultiplier, seed) => {\n    const modifiedSeed = modifySeed(seed, seedMultiplier);\n    let generated = getLastDigit(modifiedSeed);\n    if (generated > limit || generated === 0) {\n        generated = 1;\n    }\n    return generated;\n}\n\nconst findGreaterNumber = (a, b) => {\n  let greater;\n  greater = a >= b ? a : b;\n  return greater;\n}\n\n// /**\n//  *\n//  * @returns {SVGSVGElement}\n//  */\n// const makeSVG = () => {\n//     console.log('Make an SVG.');\n//\n//     let svg1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n//     svg1.setAttribute(\"width\", \"400\");\n//     svg1.setAttribute(\"height\", \"400\");\n//     svg1.setAttribute(\"viewBox\", \"0 0 800 300\");\n\n//     let cir1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n//     cir1.setAttribute(\"cx\", 50);\n//     cir1.setAttribute(\"cy\", 50);\n//     cir1.setAttribute(\"r\", 50);\n//\n//     svg1.appendChild(cir1);\n//\n//     return svg1;\n//\n// }\n//\n//\n//\n\n\n/***/ }),\n\n/***/ \"?8465\":\n/*!************************!*\\\n  !*** crypto (ignored) ***!\n  \\************************/\n/*! unknown exports (runtime-defined) */\n/*! runtime requirements:  */\n/***/ (() => {\n\n/* (ignored) */\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(__webpack_module_cache__[moduleId]) {\n/******/ \t\t\treturn __webpack_module_cache__[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/amd define */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.amdD = function () {\n/******/ \t\t\tthrow new Error('define cannot be used indirect');\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/amd options */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.amdO = {};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => module['default'] :\n/******/ \t\t\t\t() => module;\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/node module decorator */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.nmd = (module) => {\n/******/ \t\t\tmodule.paths = [];\n/******/ \t\t\tif (!module.children) module.children = [];\n/******/ \t\t\treturn module;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\n/******/ \t// module exports must be returned from runtime so entry inlining is disabled\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(\"./src/index.js\");\n/******/ })()\n;\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"sourceRoot":""}